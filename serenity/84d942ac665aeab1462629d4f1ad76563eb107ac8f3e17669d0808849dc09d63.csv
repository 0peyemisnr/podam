"Story","Title","Result","Date","Stability","Duration (s)"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2015-07-08T23:32:11.443+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2015-07-08T23:32:10.337+01:00","0.0","0.16"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2015-07-08T23:32:11.276+01:00","0.0","0.05"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2015-07-08T23:32:10.800+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2015-07-08T23:32:10.566+01:00","0.0","0.07"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2015-07-08T23:32:10.233+01:00","0.0","0.1"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2015-07-08T23:32:11.153+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2015-07-08T23:32:10.642+01:00","0.0","0.09"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2015-07-08T23:32:10.494+01:00","0.0","0.07"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2015-07-08T23:32:11.036+01:00","0.0","0.05"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2015-07-08T23:32:10.152+01:00","0.0","0.08"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2015-07-08T23:32:11.329+01:00","0.0","0.06"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2015-07-08T23:32:10.001+01:00","0.0","0.07"
"Read only complex types test","Podam should create an instance of an Abstract class with a factory method which returns a concrete type even if the concrete type has got read-only attributes. These will be empty.","SUCCESS","2015-07-08T23:32:11.757+01:00","0.0","0.05"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2015-07-08T23:32:10.860+01:00","0.0","0.06"
"Read only complex types test","Podam should fill in POJOs which contain internal loops (e.g. objects that reference parents)","SUCCESS","2015-07-08T23:32:11.876+01:00","0.0","0.06"
"Read only complex types test","Podam should fill in complex (e.g. with more than two generic types), read-only POJOs","SUCCESS","2015-07-08T23:32:11.809+01:00","0.0","0.07"
"Read only complex types test","Podam should fill in read-only POJOs","SUCCESS","2015-07-08T23:32:11.938+01:00","0.0","0.05"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2015-07-08T23:32:10.921+01:00","0.0","0.06"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2015-07-08T23:32:11.090+01:00","0.0","0.06"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2015-07-08T23:32:11.209+01:00","0.0","0.07"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2015-07-08T23:32:10.980+01:00","0.0","0.06"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2015-07-08T23:32:11.385+01:00","0.0","0.06"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2015-07-08T23:32:10.733+01:00","0.0","0.07"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2015-07-08T23:32:10.077+01:00","0.0","0.07"
