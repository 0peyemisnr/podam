"Story","Title","Result","Date","Stability","Duration (s)"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method heavy comparator","SUCCESS","2016-09-03T17:53:02.340+01:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method light comparator","SUCCESS","2016-09-03T17:53:02.345+01:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor heavy comparator","SUCCESS","2016-09-03T17:53:02.338+01:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor light comparator","SUCCESS","2016-09-03T17:53:02.343+01:00","0.0","0.0"
"Memoization test","Even when memoization is true, if generics Pojos have different types, objects should not be equal","SUCCESS","2016-09-03T17:53:02.606+01:00","0.0","0.0"
"Class info test","In Presence of excluded attributes, the Class Info object should not contain those attributes","SUCCESS","2016-09-03T17:53:02.045+01:00","0.0","0.0"
"Abnormal pojos test","Invoking Podam on a POJO with a circular constructor (e.g. java.net.URL) leads to a null POJO","SUCCESS","2016-09-03T17:53:02.377+01:00","0.0","0.01"
"Abnormal pojos test","Invoking Podam on a POJO with a private, no arguments constructor, should return a non null POJO","SUCCESS","2016-09-03T17:53:02.374+01:00","0.0","0.0"
"Abnormal pojos test","Invoking Podam on a POJO with both circular and non circular constructors (e.g. javax.activation.DataHandler) should lead to a non empty POJO","SUCCESS","2016-09-03T17:53:02.409+01:00","0.0","0.01"
"Podam factory basic types test","Invoking Podam on an Abstract class should return a null pojo","SUCCESS","2016-09-03T17:53:01.964+01:00","0.0","0.0"
"Podam factory basic types test","Invoking Podam on an interface should return an empty POJO","SUCCESS","2016-09-03T17:53:01.950+01:00","0.0","0.0"
"Memoization test","Memoization should work correctly for collections and arrays","SUCCESS","2016-09-03T17:53:02.591+01:00","0.0","0.01"
"Memoization test","Memoization should work for recursive Pojos","SUCCESS","2016-09-03T17:53:02.601+01:00","0.0","0.0"
"Memoization test","Memoization should work with Generics","SUCCESS","2016-09-03T17:53:02.603+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a Byte wrapped value","SUCCESS","2016-09-03T17:53:02.673+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a Character wrapped value","SUCCESS","2016-09-03T17:53:02.687+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a Double wrapped value","SUCCESS","2016-09-03T17:53:02.695+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a Float wrapped value","SUCCESS","2016-09-03T17:53:02.652+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a Generic Type value","SUCCESS","2016-09-03T17:53:02.681+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a Long wrapped value","SUCCESS","2016-09-03T17:53:02.661+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a Short wrapped value","SUCCESS","2016-09-03T17:53:02.679+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a String value","SUCCESS","2016-09-03T17:53:02.675+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a boolean primitive value","SUCCESS","2016-09-03T17:53:02.693+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a boolean wrapped value","SUCCESS","2016-09-03T17:53:02.669+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a byte primitive value","SUCCESS","2016-09-03T17:53:02.667+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a char primitive value","SUCCESS","2016-09-03T17:53:02.671+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a double primitive value","SUCCESS","2016-09-03T17:53:02.690+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a float primitive value","SUCCESS","2016-09-03T17:53:02.684+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a long primitive value","SUCCESS","2016-09-03T17:53:02.662+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return a short primitive value","SUCCESS","2016-09-03T17:53:02.655+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return an Enum value","SUCCESS","2016-09-03T17:53:02.658+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return an int primitive value","SUCCESS","2016-09-03T17:53:02.677+01:00","0.0","0.0"
"Type manufacturing test","Podam Messaging System should return an integer value","SUCCESS","2016-09-03T17:53:02.664+01:00","0.0","0.0"
"External factory unit test","Podam cannot fill interface attributes if the external factory does not manufacture the right type","SUCCESS","2016-09-03T17:53:02.483+01:00","0.0","0.0"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces","SUCCESS","2016-09-03T17:53:02.569+01:00","0.0","0.0"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces which extend Map","SUCCESS","2016-09-03T17:53:02.561+01:00","0.0","0.0"
"Annotations test","Podam should assign exactly the values specified with the @PodamStrategyValue annotation","SUCCESS","2016-09-03T17:53:00.891+01:00","0.0","0.04"
"Annotations test","Podam should assign precise values and lengths when a String is annotated with @PodamStringValue","SUCCESS","2016-09-03T17:53:00.998+01:00","0.0","0.01"
"Factory unit test","Podam should be able to create an abstract class with help of factory","SUCCESS","2016-09-03T17:53:02.509+01:00","0.0","0.0"
"Collections test","Podam should be able to create instances of Concurrent Hash Maps","SUCCESS","2016-09-03T17:53:02.143+01:00","0.0","0.0"
"Collections test","Podam should be able to create instances of Hash Maps","SUCCESS","2016-09-03T17:53:02.151+01:00","0.0","0.0"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2016-09-03T17:53:02.251+01:00","0.0","0.0"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2016-09-03T17:53:02.193+01:00","0.0","0.0"
"Collections test","Podam should be able to create instances of Sorted Maps","SUCCESS","2016-09-03T17:53:02.071+01:00","0.0","0.0"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2016-09-03T17:53:02.245+01:00","0.0","0.0"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2016-09-03T17:53:02.216+01:00","0.0","0.0"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2016-09-03T17:53:02.200+01:00","0.0","0.0"
"Collections test","Podam should be able to fill in POJOs with raw type collection attributes and default values to Object","SUCCESS","2016-09-03T17:53:02.064+01:00","0.0","0.01"
"Validated pojo test","Podam should be able to fulfill most of the javax Validation framework","SUCCESS","2016-09-03T17:53:02.819+01:00","0.0","0.04"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2016-09-03T17:53:02.190+01:00","0.0","0.0"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2016-09-03T17:53:02.239+01:00","0.0","0.0"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2016-09-03T17:53:02.203+01:00","0.0","0.0"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2016-09-03T17:53:02.198+01:00","0.0","0.0"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2016-09-03T17:53:02.233+01:00","0.0","0.0"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2016-09-03T17:53:02.188+01:00","0.0","0.0"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2016-09-03T17:53:02.246+01:00","0.0","0.0"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2016-09-03T17:53:02.183+01:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Podam should correctly generate HashMaps with Long as key type","SUCCESS","2016-09-03T17:53:02.347+01:00","0.0","0.0"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization disabled","SUCCESS","2016-09-03T17:53:02.226+01:00","0.0","0.0"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization enabled","SUCCESS","2016-09-03T17:53:02.208+01:00","0.0","0.01"
"Extensions test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2016-09-03T17:53:02.437+01:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2016-09-03T17:53:02.350+01:00","0.0","0.0"
"Read only complex types test","Podam should create an instance of an Abstract class with a factory method which returns a concrete type even if the concrete type has got read-only attributes. These will be empty.","SUCCESS","2016-09-03T17:53:02.302+01:00","0.0","0.0"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2016-09-03T17:53:02.219+01:00","0.0","0.0"
"Extensions test","Podam should fill AttributeMetadata with the attribute name","SUCCESS","2016-09-03T17:53:02.441+01:00","0.0","0.0"
"Podam factory basic types test","Podam should fill Java native types","SUCCESS","2016-09-03T17:53:01.911+01:00","0.0","0.01"
"Podam factory basic types test","Podam should fill Java string type","SUCCESS","2016-09-03T17:53:02.001+01:00","0.0","0.0"
"Podam factory basic types test","Podam should fill Java string type with full constructor","SUCCESS","2016-09-03T17:53:02.003+01:00","0.0","0.0"
"External factory unit test","Podam should fill POJOs and interface attributes if a full constructor sets the interface attribute value","SUCCESS","2016-09-03T17:53:02.490+01:00","0.0","0.0"
"Podam factory basic types test","Podam should fill POJOs with non default constructors","SUCCESS","2016-09-03T17:53:01.975+01:00","0.0","0.0"
"Abnormal pojos test","Podam should fill POJOs with protected, non default constructors","SUCCESS","2016-09-03T17:53:02.393+01:00","0.0","0.0"
"Abnormal pojos test","Podam should fill POJOs with public, non default constructors","SUCCESS","2016-09-03T17:53:02.387+01:00","0.0","0.0"
"Podam factory basic types test","Podam should fill arrays with elements","SUCCESS","2016-09-03T17:53:01.969+01:00","0.0","0.0"
"Abnormal pojos test","Podam should fill embedded abstract classes if a concrete type has been specified","SUCCESS","2016-09-03T17:53:02.390+01:00","0.0","0.0"
"Podam factory basic types test","Podam should fill in Maps of the containing class type","SUCCESS","2016-09-03T17:53:01.921+01:00","0.0","0.03"
"Read only complex types test","Podam should fill in POJOs which contain internal loops (e.g. objects that reference parents)","SUCCESS","2016-09-03T17:53:02.308+01:00","0.0","0.01"
"Podam factory basic types test","Podam should fill in POJOs which have a circular dependency","SUCCESS","2016-09-03T17:53:01.997+01:00","0.0","0.0"
"Podam factory basic types test","Podam should fill in POJOs with Enums","SUCCESS","2016-09-03T17:53:01.917+01:00","0.0","0.0"
"Collections test","Podam should fill in POJOs with attributes containing wildcards","SUCCESS","2016-09-03T17:53:02.153+01:00","0.0","0.0"
"Podam factory basic types test","Podam should fill in a POJO with basic jvm types","SUCCESS","2016-09-03T17:53:01.953+01:00","0.0","0.01"
"Read only complex types test","Podam should fill in complex (e.g. with more than two generic types), read-only POJOs","SUCCESS","2016-09-03T17:53:02.304+01:00","0.0","0.0"
"Podam factory basic types test","Podam should fill in lists of the containing class type","SUCCESS","2016-09-03T17:53:01.977+01:00","0.0","0.02"
"Read only complex types test","Podam should fill in read-only POJOs","SUCCESS","2016-09-03T17:53:02.314+01:00","0.0","0.0"
"Walk through example unit test","Podam should fill in the Address POJO correctly","SUCCESS","2016-09-03T17:53:02.904+01:00","0.0","0.0"
"Walk through example unit test","Podam should fill in the Bank Account POJO correctly","SUCCESS","2016-09-03T17:53:02.903+01:00","0.0","0.0"
"Walk through example unit test","Podam should fill in the Country POJO correctly","SUCCESS","2016-09-03T17:53:02.874+01:00","0.0","0.0"
"Walk through example unit test","Podam should fill in the Order POJO correctly","SUCCESS","2016-09-03T17:53:02.896+01:00","0.0","0.01"
"Podam factory basic types test","Podam should fill recursive POJOs correctly, including all their fields","SUCCESS","2016-09-03T17:53:01.972+01:00","0.0","0.0"
"Podam factory basic types test","Podam should fill recursive POJOs when invoking the factory population directly","SUCCESS","2016-09-03T17:53:01.967+01:00","0.0","0.0"
"Walk through example unit test","Podam should fill the Article POJO correctly","SUCCESS","2016-09-03T17:53:02.902+01:00","0.0","0.0"
"Walk through example unit test","Podam should fill the Client POJO correctly","SUCCESS","2016-09-03T17:53:02.878+01:00","0.0","0.02"
"Walk through example unit test","Podam should fill the OrderItem POJO correctly","SUCCESS","2016-09-03T17:53:02.907+01:00","0.0","0.0"
"Abnormal pojos test","Podam should fill values invoking children setters accepting a type different from the parent type","SUCCESS","2016-09-03T17:53:02.371+01:00","0.0","0.0"
"Class info test","Podam should generate a ClassInfo which contains information for the setters contained in the POJO","SUCCESS","2016-09-03T17:53:02.048+01:00","0.0","0.0"
"Abnormal pojos test","Podam should generate a non null POJO for Abstract types with a concrete type","SUCCESS","2016-09-03T17:53:02.398+01:00","0.0","0.0"
"Annotations test","Podam should handle POJOs with annotated field and setter","SUCCESS","2016-09-03T17:53:00.948+01:00","0.0","0.0"
"Annotations test","Podam should handle POJOs with constructors that have one or more self references to the POJO class, provided the required constructor is annotated with @PodamConstructor","SUCCESS","2016-09-03T17:53:00.963+01:00","0.0","0.01"
"Collections test","Podam should handle POJOs with no setters and collections in the constructor","SUCCESS","2016-09-03T17:53:02.121+01:00","0.0","0.0"
"Abnormal pojos test","Podam should handle POJOs with private constructors only","SUCCESS","2016-09-03T17:53:02.405+01:00","0.0","0.0"
"Abnormal pojos test","Podam should handle POJOs with self reference constructors but not default constructors without the need for the @PodamConstructor annotation","SUCCESS","2016-09-03T17:53:02.399+01:00","0.0","0.0"
"Singletons test","Podam should handle Singletons with parameters in the static method","SUCCESS","2016-09-03T17:53:02.624+01:00","0.0","0.02"
"Non EJB pojo test","Podam should handle attributes in accordance with custom Class Info Strategies","SUCCESS","2016-09-03T17:53:02.457+01:00","0.0","0.0"
"Inheritance test","Podam should handle basic inheritance scenarios","SUCCESS","2016-09-03T17:53:02.530+01:00","0.0","0.01"
"Boolean unit test","Podam should handle booleans correctly","SUCCESS","2016-09-03T17:53:01.844+01:00","0.0","0.01"
"Annotations test","Podam should handle both native and wrapped boolean values with @PodamBooleanValue annotation","SUCCESS","2016-09-03T17:53:00.851+01:00","0.0","0.01"
"Annotations test","Podam should handle both native and wrapped byte values with @PodamByteValue annotation","SUCCESS","2016-09-03T17:53:00.861+01:00","0.0","0.01"
"Annotations test","Podam should handle both native and wrapped char values with @PodamCharValue annotation","SUCCESS","2016-09-03T17:53:00.872+01:00","0.0","0.01"
"Annotations test","Podam should handle both native and wrapped double values with @PodamDoubleValue annotation","SUCCESS","2016-09-03T17:53:00.883+01:00","0.0","0.01"
"Annotations test","Podam should handle both native and wrapped float values with @PodamFloatValue annotation","SUCCESS","2016-09-03T17:53:00.954+01:00","0.0","0.01"
"Annotations test","Podam should handle both native and wrapped integer values with @PodamIntValue annotation","SUCCESS","2016-09-03T17:53:00.829+01:00","0.0","0.02"
"Annotations test","Podam should handle both native and wrapped long values with @PodamLongValue annotation","SUCCESS","2016-09-03T17:53:00.972+01:00","0.0","0.01"
"Annotations test","Podam should handle both native and wrapped short values with @PodamShortValue annotation","SUCCESS","2016-09-03T17:53:00.982+01:00","0.0","0.01"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2016-09-03T17:53:02.224+01:00","0.0","0.0"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2016-09-03T17:53:02.237+01:00","0.0","0.0"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2016-09-03T17:53:02.242+01:00","0.0","0.0"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2016-09-03T17:53:02.230+01:00","0.0","0.0"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2016-09-03T17:53:02.249+01:00","0.0","0.0"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2016-09-03T17:53:02.206+01:00","0.0","0.0"
"Annotations test","Podam should handle immutable POJOs annotated with @PodamConstructor","SUCCESS","2016-09-03T17:53:00.932+01:00","0.0","0.01"
"Collections test","Podam should handle immutable POJOs with generified collections in the constructor","SUCCESS","2016-09-03T17:53:02.124+01:00","0.0","0.02"
"Collections test","Podam should handle immutable Pojos with non generic collections","SUCCESS","2016-09-03T17:53:02.146+01:00","0.0","0.0"
"Podam factory basic types test","Podam should handle immutable non annotated POJOs","SUCCESS","2016-09-03T17:53:01.905+01:00","0.0","0.01"
"Collections test","Podam should handle standard collections","SUCCESS","2016-09-03T17:53:02.075+01:00","0.0","0.05"
"Inheritance test","Podam should handle the manufacturing of POJOs which inherit from other classes","SUCCESS","2016-09-03T17:53:02.544+01:00","0.0","0.0"
"Class unit test","Podam should handle the manufacturing of POJOs with generic types in constructor","SUCCESS","2016-09-03T17:53:01.869+01:00","0.0","0.01"
"Class unit test","Podam should handle the manufacturing of basic types","SUCCESS","2016-09-03T17:53:01.877+01:00","0.0","0.0"
"Class unit test","Podam should handle the manufacturing of generic POJOs","SUCCESS","2016-09-03T17:53:01.881+01:00","0.0","0.0"
"Inheritance test","Podam should manufacture all POJOs in a tree hierarchy","SUCCESS","2016-09-03T17:53:02.539+01:00","0.0","0.0"
"Inheritance test","Podam should manufacture attributes implementing Collection and Map interfaces","SUCCESS","2016-09-03T17:53:02.522+01:00","0.0","0.01"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2016-09-03T17:53:02.186+01:00","0.0","0.0"
"External factory unit test","Podam should not be able to create instances of an Abstract class even if the POJO has a full constructor","SUCCESS","2016-09-03T17:53:02.471+01:00","0.0","0.0"
"External factory unit test","Podam should not be able to create instances of an Abstract class if the external factory does not provide a concrete implementation","SUCCESS","2016-09-03T17:53:02.480+01:00","0.0","0.0"
"External factory unit test","Podam should not create instances of an interface when given an external factory which does not manufacture the concrete type","SUCCESS","2016-09-03T17:53:02.486+01:00","0.0","0.0"
"External factory unit test","Podam should not create instances of non-instantiable classes","SUCCESS","2016-09-03T17:53:02.475+01:00","0.0","0.0"
"Annotations test","Podam should not fill POJO's attributes annotated with @PodamExclude","SUCCESS","2016-09-03T17:53:00.694+01:00","0.0","0.07"
"Abnormal pojos test","Podam should return a null value for non instantiable POJOs","SUCCESS","2016-09-03T17:53:02.396+01:00","0.0","0.0"
"Class info test","Podam should return valid class info for POJOs with no attributes","SUCCESS","2016-09-03T17:53:02.035+01:00","0.0","0.0"
"Abnormal pojos test","Podam should throw an exception if a POJO contains invalid getters or setters","SUCCESS","2016-09-03T17:53:02.404+01:00","0.0","0.0"
"Multiple interfaces inheritance test","Podam will create an instance of a POJO but its interface types won't be instantiated","SUCCESS","2016-09-03T17:53:02.565+01:00","0.0","0.0"
"Annotations test","The @PodamCollection annotation should allow to set sizes on all collections and arrays","SUCCESS","2016-09-03T17:53:00.990+01:00","0.0","0.01"
"Class info test","The ClassInfo object created for a class should handle @PodamExcludeAnnotations","SUCCESS","2016-09-03T17:53:02.039+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","The Random Data Provider Strategy should be initialised correctly and allow for changes in the number of collection elements","SUCCESS","2016-09-03T17:53:02.335+01:00","0.0","0.0"
"External factory unit test","The management of external factories should be correct and chaining should work","SUCCESS","2016-09-03T17:53:02.478+01:00","0.0","0.0"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of XMLGregorianCalendar","SUCCESS","2016-09-03T17:53:02.943+01:00","0.0","0.0"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of the Duration class","SUCCESS","2016-09-03T17:53:02.932+01:00","0.0","0.01"
"XML datatype unit test","When given an external factory, Podam should be able to fill POJOs with instance attributes containing XMLGregorianCalendar and Duration","SUCCESS","2016-09-03T17:53:02.939+01:00","0.0","0.0"
"Memoization test","When memoization is set to false Podam should return different instances for different invocations","SUCCESS","2016-09-03T17:53:02.586+01:00","0.0","0.0"
"Memoization test","When memoization is set to true Podam should return the same instance for different invocations","SUCCESS","2016-09-03T17:53:02.588+01:00","0.0","0.0"
"Validated pojo test","When the @Size annotation doesn't have a max length specified, Podam should assign a sensible value","SUCCESS","2016-09-03T17:53:02.724+01:00","0.0","0.09"
