"Story","Title","Result","Date","Stability","Duration (s)"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2015-09-27T14:32:23.915+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2015-09-27T14:32:22.898+01:00","0.0","0.08"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2015-09-27T14:32:23.756+01:00","0.0","0.05"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2015-09-27T14:32:23.280+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2015-09-27T14:32:23.098+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2015-09-27T14:32:22.829+01:00","0.0","0.07"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2015-09-27T14:32:23.639+01:00","0.0","0.05"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2015-09-27T14:32:23.155+01:00","0.0","0.07"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2015-09-27T14:32:22.983+01:00","0.0","0.11"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2015-09-27T14:32:23.526+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2015-09-27T14:32:22.762+01:00","0.0","0.07"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2015-09-27T14:32:23.807+01:00","0.0","0.05"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2015-09-27T14:32:22.620+01:00","0.0","0.06"
"Read only complex types test","Podam should create an instance of an Abstract class with a factory method which returns a concrete type even if the concrete type has got read-only attributes. These will be empty.","SUCCESS","2015-09-27T14:32:24.301+01:00","0.0","0.05"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2015-09-27T14:32:23.341+01:00","0.0","0.07"
"Read only complex types test","Podam should fill in POJOs which contain internal loops (e.g. objects that reference parents)","SUCCESS","2015-09-27T14:32:24.422+01:00","0.0","0.06"
"Read only complex types test","Podam should fill in complex (e.g. with more than two generic types), read-only POJOs","SUCCESS","2015-09-27T14:32:24.355+01:00","0.0","0.07"
"Read only complex types test","Podam should fill in read-only POJOs","SUCCESS","2015-09-27T14:32:24.483+01:00","0.0","0.06"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2015-09-27T14:32:23.408+01:00","0.0","0.06"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2015-09-27T14:32:23.584+01:00","0.0","0.05"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2015-09-27T14:32:23.693+01:00","0.0","0.06"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2015-09-27T14:32:23.471+01:00","0.0","0.05"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2015-09-27T14:32:23.860+01:00","0.0","0.05"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2015-09-27T14:32:23.223+01:00","0.0","0.06"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2015-09-27T14:32:22.685+01:00","0.0","0.08"
