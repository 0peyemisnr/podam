"Story","Title","Result","Date","Stability","Duration (s)"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method heavy comparator","SUCCESS","2015-09-27T14:32:24.791+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method light comparator","SUCCESS","2015-09-27T14:32:24.854+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor heavy comparator","SUCCESS","2015-09-27T14:32:24.782+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor light comparator","SUCCESS","2015-09-27T14:32:24.845+01:00","0.0","0.01"
"Memoization test","Even when memoization is true, if generics Pojos have different types, objects should not be equal","SUCCESS","2015-09-27T14:32:29.075+01:00","0.0","0.06"
"Class info test","In Presence of excluded attributes, the Class Info object should not contain those attributes","SUCCESS","2015-09-27T14:32:20.944+01:00","0.0","0.02"
"Abnormal pojos test","Invoking Podam on a POJO with a circular constructor (e.g. java.net.URL) leads to a null POJO","SUCCESS","2015-09-27T14:32:25.378+01:00","0.0","0.08"
"Abnormal pojos test","Invoking Podam on a POJO with a private, no arguments constructor, should return a non null POJO","SUCCESS","2015-09-27T14:32:25.322+01:00","0.0","0.06"
"Abnormal pojos test","Invoking Podam on a POJO with both circular and non circular constructors (e.g. javax.activation.DataHandler) should lead to a non empty POJO","SUCCESS","2015-09-27T14:32:25.906+01:00","0.0","0.07"
"Podam factory basic types test","Invoking Podam on an Abstract class should return a null pojo","SUCCESS","2015-09-27T14:32:19.784+01:00","0.0","0.07"
"Podam factory basic types test","Invoking Podam on an interface should return an empty POJO","SUCCESS","2015-09-27T14:32:19.611+01:00","0.0","0.07"
"Memoization test","Memoization should work correctly for collections and arrays","SUCCESS","2015-09-27T14:32:28.805+01:00","0.0","0.13"
"Memoization test","Memoization should work for recursive Pojos","SUCCESS","2015-09-27T14:32:28.939+01:00","0.0","0.06"
"Memoization test","Memoization should work with Generics","SUCCESS","2015-09-27T14:32:29.002+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a Byte wrapped value","SUCCESS","2015-09-27T14:32:30.522+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a Character wrapped value","SUCCESS","2015-09-27T14:32:30.931+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a Double wrapped value","SUCCESS","2015-09-27T14:32:31.135+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a Float wrapped value","SUCCESS","2015-09-27T14:32:29.836+01:00","0.0","0.08"
"Type manufacturing test","Podam Messaging System should return a Generic Type value","SUCCESS","2015-09-27T14:32:30.793+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a Long wrapped value","SUCCESS","2015-09-27T14:32:30.061+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a Short wrapped value","SUCCESS","2015-09-27T14:32:30.726+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a String value","SUCCESS","2015-09-27T14:32:30.591+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a boolean primitive value","SUCCESS","2015-09-27T14:32:31.069+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a boolean wrapped value","SUCCESS","2015-09-27T14:32:30.384+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a byte primitive value","SUCCESS","2015-09-27T14:32:30.314+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a char primitive value","SUCCESS","2015-09-27T14:32:30.459+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a double primitive value","SUCCESS","2015-09-27T14:32:30.998+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a float primitive value","SUCCESS","2015-09-27T14:32:30.864+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a long primitive value","SUCCESS","2015-09-27T14:32:30.134+01:00","0.0","0.11"
"Type manufacturing test","Podam Messaging System should return a short primitive value","SUCCESS","2015-09-27T14:32:29.913+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return an Enum value","SUCCESS","2015-09-27T14:32:29.984+01:00","0.0","0.08"
"Type manufacturing test","Podam Messaging System should return an int primitive value","SUCCESS","2015-09-27T14:32:30.659+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return an integer value","SUCCESS","2015-09-27T14:32:30.249+01:00","0.0","0.06"
"External factory unit test","Podam cannot fill interface attributes if the external factory does not manufacture the right type","SUCCESS","2015-09-27T14:32:27.237+01:00","0.0","0.08"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces","SUCCESS","2015-09-27T14:32:28.323+01:00","0.0","0.06"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces which extend Map","SUCCESS","2015-09-27T14:32:28.194+01:00","0.0","0.06"
"Annotations test","Podam should assign exactly the values specified with the @PodamStrategyValue annotation","SUCCESS","2015-09-27T14:32:15.715+01:00","0.0","0.17"
"Annotations test","Podam should assign precise values and lengths when a String is annotated with @PodamStringValue","SUCCESS","2015-09-27T14:32:16.501+01:00","0.0","0.08"
"Collections test","Podam should be able to create instances of Concurrent Hash Maps","SUCCESS","2015-09-27T14:32:21.883+01:00","0.0","0.06"
"Collections test","Podam should be able to create instances of Hash Maps","SUCCESS","2015-09-27T14:32:22.016+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2015-09-27T14:32:23.915+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2015-09-27T14:32:22.898+01:00","0.0","0.08"
"Collections test","Podam should be able to create instances of Sorted Maps","SUCCESS","2015-09-27T14:32:21.315+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2015-09-27T14:32:23.756+01:00","0.0","0.05"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2015-09-27T14:32:23.280+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2015-09-27T14:32:23.098+01:00","0.0","0.06"
"Collections test","Podam should be able to fill in POJOs with raw type collection attributes and default values to Object","SUCCESS","2015-09-27T14:32:21.247+01:00","0.0","0.07"
"Validated pojo test","Podam should be able to fulfill most of the javax Validation framework","SUCCESS","2015-09-27T14:32:31.645+01:00","0.0","0.15"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2015-09-27T14:32:22.829+01:00","0.0","0.07"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2015-09-27T14:32:23.639+01:00","0.0","0.05"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2015-09-27T14:32:23.155+01:00","0.0","0.07"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2015-09-27T14:32:22.983+01:00","0.0","0.11"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2015-09-27T14:32:23.526+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2015-09-27T14:32:22.762+01:00","0.0","0.07"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2015-09-27T14:32:23.807+01:00","0.0","0.05"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2015-09-27T14:32:22.620+01:00","0.0","0.06"
"Random data provider strategy impl initialisation unit test","Podam should correctly generate HashMaps with Long as key type","SUCCESS","2015-09-27T14:32:24.863+01:00","0.0","0.05"
"Extensions test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2015-09-27T14:32:26.248+01:00","0.0","0.07"
"Random data provider strategy impl initialisation unit test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2015-09-27T14:32:24.915+01:00","0.0","0.06"
"Read only complex types test","Podam should create an instance of an Abstract class with a factory method which returns a concrete type even if the concrete type has got read-only attributes. These will be empty.","SUCCESS","2015-09-27T14:32:24.301+01:00","0.0","0.05"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2015-09-27T14:32:23.341+01:00","0.0","0.07"
"Extensions test","Podam should fill AttributeMetadata with the attribute name","SUCCESS","2015-09-27T14:32:26.318+01:00","0.0","0.06"
"Podam factory basic types test","Podam should fill Java native types","SUCCESS","2015-09-27T14:32:19.215+01:00","0.0","0.13"
"External factory unit test","Podam should fill POJOs and interface attributes if a full constructor sets the interface attribute value","SUCCESS","2015-09-27T14:32:27.392+01:00","0.0","0.14"
"Podam factory basic types test","Podam should fill POJOs with non default constructors","SUCCESS","2015-09-27T14:32:20.184+01:00","0.0","0.08"
"Abnormal pojos test","Podam should fill POJOs with protected, non default constructors","SUCCESS","2015-09-27T14:32:25.575+01:00","0.0","0.06"
"Abnormal pojos test","Podam should fill POJOs with public, non default constructors","SUCCESS","2015-09-27T14:32:25.458+01:00","0.0","0.06"
"Podam factory basic types test","Podam should fill arrays with elements","SUCCESS","2015-09-27T14:32:19.935+01:00","0.0","0.11"
"Abnormal pojos test","Podam should fill embedded abstract classes if a concrete type has been specified","SUCCESS","2015-09-27T14:32:25.517+01:00","0.0","0.06"
"Podam factory basic types test","Podam should fill in Maps of the containing class type","SUCCESS","2015-09-27T14:32:19.423+01:00","0.0","0.19"
"Read only complex types test","Podam should fill in POJOs which contain internal loops (e.g. objects that reference parents)","SUCCESS","2015-09-27T14:32:24.422+01:00","0.0","0.06"
"Podam factory basic types test","Podam should fill in POJOs which have a circular dependency","SUCCESS","2015-09-27T14:32:20.451+01:00","0.0","0.07"
"Podam factory basic types test","Podam should fill in POJOs with Enums","SUCCESS","2015-09-27T14:32:19.343+01:00","0.0","0.08"
"Collections test","Podam should fill in POJOs with attributes containing wildcards","SUCCESS","2015-09-27T14:32:22.072+01:00","0.0","0.06"
"Podam factory basic types test","Podam should fill in a POJO with basic jvm types","SUCCESS","2015-09-27T14:32:19.683+01:00","0.0","0.1"
"Read only complex types test","Podam should fill in complex (e.g. with more than two generic types), read-only POJOs","SUCCESS","2015-09-27T14:32:24.355+01:00","0.0","0.07"
"Podam factory basic types test","Podam should fill in lists of the containing class type","SUCCESS","2015-09-27T14:32:20.270+01:00","0.0","0.18"
"Read only complex types test","Podam should fill in read-only POJOs","SUCCESS","2015-09-27T14:32:24.483+01:00","0.0","0.06"
"Walk through example unit test","Podam should fill in the Address POJO correctly","SUCCESS","2015-09-27T14:32:32.501+01:00","0.0","0.05"
"Walk through example unit test","Podam should fill in the Bank Account POJO correctly","SUCCESS","2015-09-27T14:32:32.454+01:00","0.0","0.05"
"Walk through example unit test","Podam should fill in the Country POJO correctly","SUCCESS","2015-09-27T14:32:32.069+01:00","0.0","0.06"
"Walk through example unit test","Podam should fill in the Order POJO correctly","SUCCESS","2015-09-27T14:32:32.332+01:00","0.0","0.08"
"Podam factory basic types test","Podam should fill recursive POJOs correctly, including all their fields","SUCCESS","2015-09-27T14:32:20.052+01:00","0.0","0.13"
"Podam factory basic types test","Podam should fill recursive POJOs when invoking the factory population directly","SUCCESS","2015-09-27T14:32:19.863+01:00","0.0","0.07"
"Walk through example unit test","Podam should fill the Article POJO correctly","SUCCESS","2015-09-27T14:32:32.413+01:00","0.0","0.04"
"Walk through example unit test","Podam should fill the Client POJO correctly","SUCCESS","2015-09-27T14:32:32.125+01:00","0.0","0.2"
"Walk through example unit test","Podam should fill the OrderItem POJO correctly","SUCCESS","2015-09-27T14:32:32.554+01:00","0.0","0.05"
"Abnormal pojos test","Podam should fill values invoking children setters accepting a type different from the parent type","SUCCESS","2015-09-27T14:32:25.269+01:00","0.0","0.05"
"Class info test","Podam should generate a ClassInfo which contains information for the setters contained in the POJO","SUCCESS","2015-09-27T14:32:20.961+01:00","0.0","0.01"
"Abnormal pojos test","Podam should generate a non null POJO for Abstract types with a concrete type","SUCCESS","2015-09-27T14:32:25.686+01:00","0.0","0.06"
"Annotations test","Podam should handle POJOs with constructors that have one or more self references to the POJO class, provided the required constructor is annotated with @PodamConstructor","SUCCESS","2015-09-27T14:32:16.095+01:00","0.0","0.1"
"Collections test","Podam should handle POJOs with no setters and collections in the constructor","SUCCESS","2015-09-27T14:32:21.694+01:00","0.0","0.06"
"Abnormal pojos test","Podam should handle POJOs with private constructors only","SUCCESS","2015-09-27T14:32:25.854+01:00","0.0","0.05"
"Abnormal pojos test","Podam should handle POJOs with self reference constructors but not default constructors without the need for the @PodamConstructor annotation","SUCCESS","2015-09-27T14:32:25.746+01:00","0.0","0.06"
"Singletons test","Podam should handle Singletons with parameters in the static method","SUCCESS","2015-09-27T14:32:29.415+01:00","0.0","0.14"
"Non EJB pojo test","Podam should handle attributes in accordance with custom Class Info Strategies","SUCCESS","2015-09-27T14:32:26.655+01:00","0.0","0.06"
"Inheritance test","Podam should handle basic inheritance scenarios","SUCCESS","2015-09-27T14:32:27.781+01:00","0.0","0.07"
"Boolean unit test","Podam should handle booleans correctly","SUCCESS","2015-09-27T14:32:18.173+01:00","0.0","0.07"
"Annotations test","Podam should handle both native and wrapped boolean values with @PodamBooleanValue annotation","SUCCESS","2015-09-27T14:32:15.197+01:00","0.0","0.1"
"Annotations test","Podam should handle both native and wrapped byte values with @PodamByteValue annotation","SUCCESS","2015-09-27T14:32:15.305+01:00","0.0","0.12"
"Annotations test","Podam should handle both native and wrapped char values with @PodamCharValue annotation","SUCCESS","2015-09-27T14:32:15.431+01:00","0.0","0.14"
"Annotations test","Podam should handle both native and wrapped double values with @PodamDoubleValue annotation","SUCCESS","2015-09-27T14:32:15.571+01:00","0.0","0.14"
"Annotations test","Podam should handle both native and wrapped float values with @PodamFloatValue annotation","SUCCESS","2015-09-27T14:32:15.988+01:00","0.0","0.11"
"Annotations test","Podam should handle both native and wrapped integer values with @PodamIntValue annotation","SUCCESS","2015-09-27T14:32:15.039+01:00","0.0","0.16"
"Annotations test","Podam should handle both native and wrapped long values with @PodamLongValue annotation","SUCCESS","2015-09-27T14:32:16.193+01:00","0.0","0.1"
"Annotations test","Podam should handle both native and wrapped short values with @PodamShortValue annotation","SUCCESS","2015-09-27T14:32:16.297+01:00","0.0","0.11"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2015-09-27T14:32:23.408+01:00","0.0","0.06"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2015-09-27T14:32:23.584+01:00","0.0","0.05"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2015-09-27T14:32:23.693+01:00","0.0","0.06"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2015-09-27T14:32:23.471+01:00","0.0","0.05"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2015-09-27T14:32:23.860+01:00","0.0","0.05"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2015-09-27T14:32:23.223+01:00","0.0","0.06"
"Annotations test","Podam should handle immutable POJOs annotated with @PodamConstructor","SUCCESS","2015-09-27T14:32:15.888+01:00","0.0","0.1"
"Collections test","Podam should handle immutable POJOs with generified collections in the constructor","SUCCESS","2015-09-27T14:32:21.757+01:00","0.0","0.13"
"Collections test","Podam should handle immutable Pojos with non generic collections","SUCCESS","2015-09-27T14:32:21.942+01:00","0.0","0.07"
"Podam factory basic types test","Podam should handle immutable non annotated POJOs","SUCCESS","2015-09-27T14:32:19.116+01:00","0.0","0.1"
"Collections test","Podam should handle standard collections","SUCCESS","2015-09-27T14:32:21.379+01:00","0.0","0.31"
"Inheritance test","Podam should handle the manufacturing of POJOs which inherit from other classes","SUCCESS","2015-09-27T14:32:27.911+01:00","0.0","0.05"
"Class unit test","Podam should handle the manufacturing of POJOs with generic types in constructor","SUCCESS","2015-09-27T14:32:18.548+01:00","0.0","0.1"
"Class unit test","Podam should handle the manufacturing of basic types","SUCCESS","2015-09-27T14:32:18.645+01:00","0.0","0.1"
"Class unit test","Podam should handle the manufacturing of generic POJOs","SUCCESS","2015-09-27T14:32:18.742+01:00","0.0","0.11"
"Inheritance test","Podam should manufacture all POJOs in a tree hierarchy","SUCCESS","2015-09-27T14:32:27.848+01:00","0.0","0.06"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2015-09-27T14:32:22.685+01:00","0.0","0.08"
"External factory unit test","Podam should not be able to create instances of an Abstract class even if the POJO has a full constructor","SUCCESS","2015-09-27T14:32:26.990+01:00","0.0","0.07"
"External factory unit test","Podam should not be able to create instances of an Abstract class if the external factory does not provide a concrete implementation","SUCCESS","2015-09-27T14:32:27.161+01:00","0.0","0.08"
"External factory unit test","Podam should not create instances of an interface when given an external factory which does not manufacture the concrete type","SUCCESS","2015-09-27T14:32:27.315+01:00","0.0","0.08"
"External factory unit test","Podam should not create instances of non-instantiable classes","SUCCESS","2015-09-27T14:32:27.063+01:00","0.0","0.07"
"Annotations test","Podam should not fill POJO's attributes annotated with @PodamExclude","SUCCESS","2015-09-27T14:32:14.577+01:00","0.0","0.3"
"Abnormal pojos test","Podam should return a null value for non instantiable POJOs","SUCCESS","2015-09-27T14:32:25.634+01:00","0.0","0.05"
"Class info test","Podam should return valid class info for POJOs with no attributes","SUCCESS","2015-09-27T14:32:20.918+01:00","0.0","0.01"
"Abnormal pojos test","Podam should throw an exception if a POJO contains invalid getters or setters","SUCCESS","2015-09-27T14:32:25.806+01:00","0.0","0.05"
"Multiple interfaces inheritance test","Podam will create an instance of a POJO but its interface types won't be instantiated","SUCCESS","2015-09-27T14:32:28.255+01:00","0.0","0.07"
"Annotations test","The @PodamCollection annotation should allow to set sizes on all collections and arrays","SUCCESS","2015-09-27T14:32:16.407+01:00","0.0","0.09"
"Class info test","The ClassInfo object created for a class should handle @PodamExcludeAnnotations","SUCCESS","2015-09-27T14:32:20.929+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","The Random Data Provider Strategy should be initialised correctly and allow for changes in the number of collection elements","SUCCESS","2015-09-27T14:32:24.775+01:00","0.0","0.01"
"External factory unit test","The management of external factories should be correct and chaining should work","SUCCESS","2015-09-27T14:32:27.139+01:00","0.0","0.02"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of XMLGregorianCalendar","SUCCESS","2015-09-27T14:32:33.081+01:00","0.0","0.06"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of the Duration class","SUCCESS","2015-09-27T14:32:32.943+01:00","0.0","0.07"
"XML datatype unit test","When given an external factory, Podam should be able to fill POJOs with instance attributes containing XMLGregorianCalendar and Duration","SUCCESS","2015-09-27T14:32:33.010+01:00","0.0","0.07"
"Memoization test","When memoization is set to false Podam should return different instances for different invocations","SUCCESS","2015-09-27T14:32:28.672+01:00","0.0","0.07"
"Memoization test","When memoization is set to true Podam should return the same instance for different invocations","SUCCESS","2015-09-27T14:32:28.739+01:00","0.0","0.06"
"Validated pojo test","When the @Size annotation doesn't have a max length specified, Podam should assign a sensible value","SUCCESS","2015-09-27T14:32:31.484+01:00","0.0","0.16"
