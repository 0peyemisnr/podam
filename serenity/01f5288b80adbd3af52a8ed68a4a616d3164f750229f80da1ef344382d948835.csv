"Story","Title","Result","Date","Stability","Duration (s)"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method heavy comparator","SUCCESS","2015-07-08T23:32:12.256+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method light comparator","SUCCESS","2015-07-08T23:32:12.273+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor heavy comparator","SUCCESS","2015-07-08T23:32:12.248+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor light comparator","SUCCESS","2015-07-08T23:32:12.264+01:00","0.0","0.01"
"Memoization test","Even when memoization is true, if generics Pojos have different types, objects should not be equal","SUCCESS","2015-07-08T23:32:16.043+01:00","0.0","0.05"
"Class info test","In Presence of excluded attributes, the Class Info object should not contain those attributes","SUCCESS","2015-07-08T23:32:08.444+01:00","0.0","0.02"
"Abnormal pojos test","Invoking Podam on a POJO with a circular constructor (e.g. java.net.URL) leads to a null POJO","SUCCESS","2015-07-08T23:32:12.758+01:00","0.0","0.07"
"Abnormal pojos test","Invoking Podam on a POJO with a private, no arguments constructor, should return a non null POJO","SUCCESS","2015-07-08T23:32:12.706+01:00","0.0","0.05"
"Abnormal pojos test","Invoking Podam on a POJO with both circular and non circular constructors (e.g. javax.activation.DataHandler) should lead to a non empty POJO","SUCCESS","2015-07-08T23:32:13.242+01:00","0.0","0.07"
"Podam factory basic types test","Invoking Podam on an Abstract class should return a null pojo","SUCCESS","2015-07-08T23:32:07.427+01:00","0.0","0.07"
"Podam factory basic types test","Invoking Podam on an interface should return an empty POJO","SUCCESS","2015-07-08T23:32:07.265+01:00","0.0","0.07"
"Memoization test","Memoization should work correctly for collections and arrays","SUCCESS","2015-07-08T23:32:15.910+01:00","0.0","0.08"
"Memoization test","Memoization should work for recursive Pojos","SUCCESS","2015-07-08T23:32:16.094+01:00","0.0","0.05"
"Memoization test","Memoization should work with Generics","SUCCESS","2015-07-08T23:32:15.993+01:00","0.0","0.05"
"Type manufacturing test","Podam Messaging System should return a Byte wrapped value","SUCCESS","2015-07-08T23:32:17.356+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a Character wrapped value","SUCCESS","2015-07-08T23:32:17.730+01:00","0.0","0.05"
"Type manufacturing test","Podam Messaging System should return a Double wrapped value","SUCCESS","2015-07-08T23:32:17.907+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a Float wrapped value","SUCCESS","2015-07-08T23:32:16.771+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a Generic Type value","SUCCESS","2015-07-08T23:32:17.610+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a Long wrapped value","SUCCESS","2015-07-08T23:32:16.975+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a Short wrapped value","SUCCESS","2015-07-08T23:32:17.549+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a String value","SUCCESS","2015-07-08T23:32:17.415+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a boolean primitive value","SUCCESS","2015-07-08T23:32:17.847+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a boolean wrapped value","SUCCESS","2015-07-08T23:32:17.233+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a byte primitive value","SUCCESS","2015-07-08T23:32:17.177+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a char primitive value","SUCCESS","2015-07-08T23:32:17.292+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a double primitive value","SUCCESS","2015-07-08T23:32:17.785+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a float primitive value","SUCCESS","2015-07-08T23:32:17.669+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return a long primitive value","SUCCESS","2015-07-08T23:32:17.040+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return a short primitive value","SUCCESS","2015-07-08T23:32:16.838+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return an Enum value","SUCCESS","2015-07-08T23:32:16.906+01:00","0.0","0.07"
"Type manufacturing test","Podam Messaging System should return an int primitive value","SUCCESS","2015-07-08T23:32:17.487+01:00","0.0","0.06"
"Type manufacturing test","Podam Messaging System should return an integer value","SUCCESS","2015-07-08T23:32:17.109+01:00","0.0","0.07"
"External factory unit test","Podam cannot fill interface attributes if the external factory does not manufacture the right type","SUCCESS","2015-07-08T23:32:14.510+01:00","0.0","0.06"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces","SUCCESS","2015-07-08T23:32:15.513+01:00","0.0","0.06"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces which extend Map","SUCCESS","2015-07-08T23:32:15.390+01:00","0.0","0.06"
"Annotations test","Podam should assign exactly the values specified with the @PodamStrategyValue annotation","SUCCESS","2015-07-08T23:32:03.224+01:00","0.0","0.21"
"Annotations test","Podam should assign precise values and lengths when a String is annotated with @PodamStringValue","SUCCESS","2015-07-08T23:32:04.111+01:00","0.0","0.08"
"Collections test","Podam should be able to create instances of Concurrent Hash Maps","SUCCESS","2015-07-08T23:32:09.369+01:00","0.0","0.07"
"Collections test","Podam should be able to create instances of Hash Maps","SUCCESS","2015-07-08T23:32:09.532+01:00","0.0","0.07"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2015-07-08T23:32:11.443+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2015-07-08T23:32:10.337+01:00","0.0","0.16"
"Collections test","Podam should be able to create instances of Sorted Maps","SUCCESS","2015-07-08T23:32:08.775+01:00","0.0","0.07"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2015-07-08T23:32:11.276+01:00","0.0","0.05"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2015-07-08T23:32:10.800+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2015-07-08T23:32:10.566+01:00","0.0","0.07"
"Collections test","Podam should be able to fill in POJOs with raw type collection attributes and default values to Object","SUCCESS","2015-07-08T23:32:08.708+01:00","0.0","0.07"
"Validated pojo test","Podam should be able to fulfill most of the javax Validation framework","SUCCESS","2015-07-08T23:32:18.403+01:00","0.0","0.14"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2015-07-08T23:32:10.233+01:00","0.0","0.1"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2015-07-08T23:32:11.153+01:00","0.0","0.06"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2015-07-08T23:32:10.642+01:00","0.0","0.09"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2015-07-08T23:32:10.494+01:00","0.0","0.07"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2015-07-08T23:32:11.036+01:00","0.0","0.05"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2015-07-08T23:32:10.152+01:00","0.0","0.08"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2015-07-08T23:32:11.329+01:00","0.0","0.06"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2015-07-08T23:32:10.001+01:00","0.0","0.07"
"Random data provider strategy impl initialisation unit test","Podam should correctly generate HashMaps with Long as key type","SUCCESS","2015-07-08T23:32:12.282+01:00","0.0","0.05"
"Extensions test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2015-07-08T23:32:13.576+01:00","0.0","0.06"
"Random data provider strategy impl initialisation unit test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2015-07-08T23:32:12.332+01:00","0.0","0.06"
"Read only complex types test","Podam should create an instance of an Abstract class with a factory method which returns a concrete type even if the concrete type has got read-only attributes. These will be empty.","SUCCESS","2015-07-08T23:32:11.757+01:00","0.0","0.05"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2015-07-08T23:32:10.860+01:00","0.0","0.06"
"Extensions test","Podam should fill AttributeMetadata with the attribute name","SUCCESS","2015-07-08T23:32:13.633+01:00","0.0","0.06"
"Podam factory basic types test","Podam should fill Java native types","SUCCESS","2015-07-08T23:32:06.871+01:00","0.0","0.11"
"External factory unit test","Podam should fill POJOs and interface attributes if a full constructor sets the interface attribute value","SUCCESS","2015-07-08T23:32:14.629+01:00","0.0","0.06"
"Podam factory basic types test","Podam should fill POJOs with non default constructors","SUCCESS","2015-07-08T23:32:07.734+01:00","0.0","0.1"
"Abnormal pojos test","Podam should fill POJOs with protected, non default constructors","SUCCESS","2015-07-08T23:32:12.945+01:00","0.0","0.05"
"Abnormal pojos test","Podam should fill POJOs with public, non default constructors","SUCCESS","2015-07-08T23:32:12.832+01:00","0.0","0.06"
"Podam factory basic types test","Podam should fill arrays with elements","SUCCESS","2015-07-08T23:32:07.591+01:00","0.0","0.07"
"Abnormal pojos test","Podam should fill embedded abstract classes if a concrete type has been specified","SUCCESS","2015-07-08T23:32:12.889+01:00","0.0","0.05"
"Podam factory basic types test","Podam should fill in Maps of the containing class type","SUCCESS","2015-07-08T23:32:07.057+01:00","0.0","0.21"
"Read only complex types test","Podam should fill in POJOs which contain internal loops (e.g. objects that reference parents)","SUCCESS","2015-07-08T23:32:11.876+01:00","0.0","0.06"
"Podam factory basic types test","Podam should fill in POJOs which have a circular dependency","SUCCESS","2015-07-08T23:32:07.995+01:00","0.0","0.08"
"Podam factory basic types test","Podam should fill in POJOs with Enums","SUCCESS","2015-07-08T23:32:06.986+01:00","0.0","0.07"
"Collections test","Podam should fill in POJOs with attributes containing wildcards","SUCCESS","2015-07-08T23:32:09.604+01:00","0.0","0.06"
"Podam factory basic types test","Podam should fill in a POJO with basic jvm types","SUCCESS","2015-07-08T23:32:07.336+01:00","0.0","0.08"
"Read only complex types test","Podam should fill in complex (e.g. with more than two generic types), read-only POJOs","SUCCESS","2015-07-08T23:32:11.809+01:00","0.0","0.07"
"Podam factory basic types test","Podam should fill in lists of the containing class type","SUCCESS","2015-07-08T23:32:07.835+01:00","0.0","0.16"
"Read only complex types test","Podam should fill in read-only POJOs","SUCCESS","2015-07-08T23:32:11.938+01:00","0.0","0.05"
"Walk through example unit test","Podam should fill in the Address POJO correctly","SUCCESS","2015-07-08T23:32:19.269+01:00","0.0","0.04"
"Walk through example unit test","Podam should fill in the Bank Account POJO correctly","SUCCESS","2015-07-08T23:32:19.227+01:00","0.0","0.04"
"Walk through example unit test","Podam should fill in the Country POJO correctly","SUCCESS","2015-07-08T23:32:18.773+01:00","0.0","0.06"
"Walk through example unit test","Podam should fill in the Order POJO correctly","SUCCESS","2015-07-08T23:32:19.050+01:00","0.0","0.09"
"Podam factory basic types test","Podam should fill recursive POJOs correctly, including all their fields","SUCCESS","2015-07-08T23:32:07.665+01:00","0.0","0.07"
"Podam factory basic types test","Podam should fill recursive POJOs when invoking the factory population directly","SUCCESS","2015-07-08T23:32:07.500+01:00","0.0","0.09"
"Walk through example unit test","Podam should fill the Article POJO correctly","SUCCESS","2015-07-08T23:32:19.143+01:00","0.0","0.08"
"Walk through example unit test","Podam should fill the Client POJO correctly","SUCCESS","2015-07-08T23:32:18.835+01:00","0.0","0.21"
"Walk through example unit test","Podam should fill the OrderItem POJO correctly","SUCCESS","2015-07-08T23:32:19.309+01:00","0.0","0.04"
"Abnormal pojos test","Podam should fill values invoking children setters accepting a type different from the parent type","SUCCESS","2015-07-08T23:32:12.656+01:00","0.0","0.05"
"Class info test","Podam should generate a ClassInfo which contains information for the setters contained in the POJO","SUCCESS","2015-07-08T23:32:08.462+01:00","0.0","0.01"
"Abnormal pojos test","Podam should generate a non null POJO for Abstract types with a concrete type","SUCCESS","2015-07-08T23:32:13.046+01:00","0.0","0.05"
"Annotations test","Podam should handle POJOs with constructors that have one or more self references to the POJO class, provided the required constructor is annotated with @PodamConstructor","SUCCESS","2015-07-08T23:32:03.694+01:00","0.0","0.09"
"Collections test","Podam should handle POJOs with no setters and collections in the constructor","SUCCESS","2015-07-08T23:32:09.159+01:00","0.0","0.08"
"Abnormal pojos test","Podam should handle POJOs with private constructors only","SUCCESS","2015-07-08T23:32:13.191+01:00","0.0","0.05"
"Abnormal pojos test","Podam should handle POJOs with self reference constructors but not default constructors without the need for the @PodamConstructor annotation","SUCCESS","2015-07-08T23:32:13.095+01:00","0.0","0.05"
"Singletons test","Podam should handle Singletons with parameters in the static method","SUCCESS","2015-07-08T23:32:16.362+01:00","0.0","0.1"
"Non EJB pojo test","Podam should handle attributes in accordance with custom Class Info Strategies","SUCCESS","2015-07-08T23:32:13.949+01:00","0.0","0.06"
"Inheritance test","Podam should handle basic inheritance scenarios","SUCCESS","2015-07-08T23:32:14.983+01:00","0.0","0.06"
"Boolean unit test","Podam should handle booleans correctly","SUCCESS","2015-07-08T23:32:05.852+01:00","0.0","0.08"
"Annotations test","Podam should handle both native and wrapped boolean values with @PodamBooleanValue annotation","SUCCESS","2015-07-08T23:32:02.594+01:00","0.0","0.13"
"Annotations test","Podam should handle both native and wrapped byte values with @PodamByteValue annotation","SUCCESS","2015-07-08T23:32:02.728+01:00","0.0","0.15"
"Annotations test","Podam should handle both native and wrapped char values with @PodamCharValue annotation","SUCCESS","2015-07-08T23:32:02.882+01:00","0.0","0.21"
"Annotations test","Podam should handle both native and wrapped double values with @PodamDoubleValue annotation","SUCCESS","2015-07-08T23:32:03.091+01:00","0.0","0.13"
"Annotations test","Podam should handle both native and wrapped float values with @PodamFloatValue annotation","SUCCESS","2015-07-08T23:32:03.573+01:00","0.0","0.12"
"Annotations test","Podam should handle both native and wrapped integer values with @PodamIntValue annotation","SUCCESS","2015-07-08T23:32:02.388+01:00","0.0","0.2"
"Annotations test","Podam should handle both native and wrapped long values with @PodamLongValue annotation","SUCCESS","2015-07-08T23:32:03.789+01:00","0.0","0.12"
"Annotations test","Podam should handle both native and wrapped short values with @PodamShortValue annotation","SUCCESS","2015-07-08T23:32:03.910+01:00","0.0","0.11"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2015-07-08T23:32:10.921+01:00","0.0","0.06"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2015-07-08T23:32:11.090+01:00","0.0","0.06"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2015-07-08T23:32:11.209+01:00","0.0","0.07"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2015-07-08T23:32:10.980+01:00","0.0","0.06"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2015-07-08T23:32:11.385+01:00","0.0","0.06"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2015-07-08T23:32:10.733+01:00","0.0","0.07"
"Annotations test","Podam should handle immutable POJOs annotated with @PodamConstructor","SUCCESS","2015-07-08T23:32:03.441+01:00","0.0","0.13"
"Collections test","Podam should handle immutable POJOs with generified collections in the constructor","SUCCESS","2015-07-08T23:32:09.239+01:00","0.0","0.13"
"Collections test","Podam should handle immutable Pojos with non generic collections","SUCCESS","2015-07-08T23:32:09.440+01:00","0.0","0.09"
"Podam factory basic types test","Podam should handle immutable non annotated POJOs","SUCCESS","2015-07-08T23:32:06.784+01:00","0.0","0.09"
"Collections test","Podam should handle standard collections","SUCCESS","2015-07-08T23:32:08.841+01:00","0.0","0.31"
"Inheritance test","Podam should handle the manufacturing of POJOs which inherit from other classes","SUCCESS","2015-07-08T23:32:15.098+01:00","0.0","0.05"
"Class unit test","Podam should handle the manufacturing of POJOs with generic types in constructor","SUCCESS","2015-07-08T23:32:06.265+01:00","0.0","0.09"
"Class unit test","Podam should handle the manufacturing of basic types","SUCCESS","2015-07-08T23:32:06.353+01:00","0.0","0.08"
"Class unit test","Podam should handle the manufacturing of generic POJOs","SUCCESS","2015-07-08T23:32:06.435+01:00","0.0","0.09"
"Inheritance test","Podam should manufacture all POJOs in a tree hierarchy","SUCCESS","2015-07-08T23:32:15.043+01:00","0.0","0.05"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2015-07-08T23:32:10.077+01:00","0.0","0.07"
"External factory unit test","Podam should not be able to create instances of an Abstract class even if the POJO has a full constructor","SUCCESS","2015-07-08T23:32:14.240+01:00","0.0","0.12"
"External factory unit test","Podam should not be able to create instances of an Abstract class if the external factory does not provide a concrete implementation","SUCCESS","2015-07-08T23:32:14.454+01:00","0.0","0.06"
"External factory unit test","Podam should not create instances of an interface when given an external factory which does not manufacture the concrete type","SUCCESS","2015-07-08T23:32:14.567+01:00","0.0","0.06"
"External factory unit test","Podam should not create instances of non-instantiable classes","SUCCESS","2015-07-08T23:32:14.365+01:00","0.0","0.06"
"Annotations test","Podam should not fill POJO's attributes annotated with @PodamExclude","SUCCESS","2015-07-08T23:32:01.825+01:00","0.0","0.34"
"Abnormal pojos test","Podam should return a null value for non instantiable POJOs","SUCCESS","2015-07-08T23:32:13.000+01:00","0.0","0.05"
"Class info test","Podam should return valid class info for POJOs with no attributes","SUCCESS","2015-07-08T23:32:08.411+01:00","0.0","0.01"
"Abnormal pojos test","Podam should throw an exception if a POJO contains invalid getters or setters","SUCCESS","2015-07-08T23:32:13.144+01:00","0.0","0.05"
"Multiple interfaces inheritance test","Podam will create an instance of a POJO but its interface types won't be instantiated","SUCCESS","2015-07-08T23:32:15.447+01:00","0.0","0.06"
"Annotations test","The @PodamCollection annotation should allow to set sizes on all collections and arrays","SUCCESS","2015-07-08T23:32:04.017+01:00","0.0","0.09"
"Class info test","The ClassInfo object created for a class should handle @PodamExcludeAnnotations","SUCCESS","2015-07-08T23:32:08.424+01:00","0.0","0.02"
"Random data provider strategy impl initialisation unit test","The Random Data Provider Strategy should be initialised correctly and allow for changes in the number of collection elements","SUCCESS","2015-07-08T23:32:12.241+01:00","0.0","0.01"
"External factory unit test","The management of external factories should be correct and chaining should work","SUCCESS","2015-07-08T23:32:14.431+01:00","0.0","0.02"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of XMLGregorianCalendar","SUCCESS","2015-07-08T23:32:19.691+01:00","0.0","0.05"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of the Duration class","SUCCESS","2015-07-08T23:32:19.580+01:00","0.0","0.06"
"XML datatype unit test","When given an external factory, Podam should be able to fill POJOs with instance attributes containing XMLGregorianCalendar and Duration","SUCCESS","2015-07-08T23:32:19.638+01:00","0.0","0.05"
"Memoization test","When memoization is set to false Podam should return different instances for different invocations","SUCCESS","2015-07-08T23:32:15.801+01:00","0.0","0.05"
"Memoization test","When memoization is set to true Podam should return the same instance for different invocations","SUCCESS","2015-07-08T23:32:15.848+01:00","0.0","0.06"
"Validated pojo test","When the @Size annotation doesn't have a max length specified, Podam should assign a sensible value","SUCCESS","2015-07-08T23:32:18.256+01:00","0.0","0.15"
