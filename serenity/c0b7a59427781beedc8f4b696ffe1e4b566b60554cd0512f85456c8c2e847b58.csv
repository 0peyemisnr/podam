"Story","Title","Result","Date","Stability","Duration (s)"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2016-08-21T23:35:45.024+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2016-08-21T23:35:44.465+07:00","0.0","0.04"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2016-08-21T23:35:44.940+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2016-08-21T23:35:44.674+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2016-08-21T23:35:44.533+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2016-08-21T23:35:44.431+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2016-08-21T23:35:44.880+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2016-08-21T23:35:44.561+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2016-08-21T23:35:44.501+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2016-08-21T23:35:44.826+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2016-08-21T23:35:44.403+07:00","0.0","0.03"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2016-08-21T23:35:44.968+07:00","0.0","0.03"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2016-08-21T23:35:44.341+07:00","0.0","0.03"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization disabled","SUCCESS","2016-08-21T23:35:44.767+07:00","0.0","0.03"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization enabled","SUCCESS","2016-08-21T23:35:44.636+07:00","0.0","0.04"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2016-08-21T23:35:44.703+07:00","0.0","0.03"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2016-08-21T23:35:44.732+07:00","0.0","0.03"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2016-08-21T23:35:44.853+07:00","0.0","0.03"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2016-08-21T23:35:44.908+07:00","0.0","0.03"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2016-08-21T23:35:44.797+07:00","0.0","0.03"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2016-08-21T23:35:44.996+07:00","0.0","0.03"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2016-08-21T23:35:44.592+07:00","0.0","0.04"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2016-08-21T23:35:44.370+07:00","0.0","0.03"
