"Story","Title","Result","Date","Stability","Duration (s)"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method heavy comparator","SUCCESS","2016-08-21T23:45:00.705+07:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method light comparator","SUCCESS","2016-08-21T23:45:00.711+07:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor heavy comparator","SUCCESS","2016-08-21T23:45:00.701+07:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor light comparator","SUCCESS","2016-08-21T23:45:00.708+07:00","0.0","0.0"
"Memoization test","Even when memoization is true, if generics Pojos have different types, objects should not be equal","SUCCESS","2016-08-21T23:45:02.123+07:00","0.0","0.02"
"Class info test","In Presence of excluded attributes, the Class Info object should not contain those attributes","SUCCESS","2016-08-21T23:44:59.078+07:00","0.0","0.0"
"Abnormal pojos test","Invoking Podam on a POJO with a circular constructor (e.g. java.net.URL) leads to a null POJO","SUCCESS","2016-08-21T23:45:00.863+07:00","0.0","0.04"
"Abnormal pojos test","Invoking Podam on a POJO with a private, no arguments constructor, should return a non null POJO","SUCCESS","2016-08-21T23:45:00.828+07:00","0.0","0.03"
"Abnormal pojos test","Invoking Podam on a POJO with both circular and non circular constructors (e.g. javax.activation.DataHandler) should lead to a non empty POJO","SUCCESS","2016-08-21T23:45:01.114+07:00","0.0","0.04"
"Podam factory basic types test","Invoking Podam on an Abstract class should return a null pojo","SUCCESS","2016-08-21T23:44:58.708+07:00","0.0","0.04"
"Podam factory basic types test","Invoking Podam on an interface should return an empty POJO","SUCCESS","2016-08-21T23:44:58.623+07:00","0.0","0.03"
"Memoization test","Memoization should work correctly for collections and arrays","SUCCESS","2016-08-21T23:45:02.032+07:00","0.0","0.04"
"Memoization test","Memoization should work for recursive Pojos","SUCCESS","2016-08-21T23:45:02.074+07:00","0.0","0.02"
"Memoization test","Memoization should work with Generics","SUCCESS","2016-08-21T23:45:02.099+07:00","0.0","0.02"
"Type manufacturing test","Podam Messaging System should return a Byte wrapped value","SUCCESS","2016-08-21T23:45:02.514+07:00","0.0","0.02"
"Type manufacturing test","Podam Messaging System should return a Character wrapped value","SUCCESS","2016-08-21T23:45:02.662+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return a Double wrapped value","SUCCESS","2016-08-21T23:45:02.756+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return a Float wrapped value","SUCCESS","2016-08-21T23:45:02.250+07:00","0.0","0.04"
"Type manufacturing test","Podam Messaging System should return a Generic Type value","SUCCESS","2016-08-21T23:45:02.610+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return a Long wrapped value","SUCCESS","2016-08-21T23:45:02.347+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return a Short wrapped value","SUCCESS","2016-08-21T23:45:02.586+07:00","0.0","0.02"
"Type manufacturing test","Podam Messaging System should return a String value","SUCCESS","2016-08-21T23:45:02.538+07:00","0.0","0.02"
"Type manufacturing test","Podam Messaging System should return a boolean primitive value","SUCCESS","2016-08-21T23:45:02.720+07:00","0.0","0.04"
"Type manufacturing test","Podam Messaging System should return a boolean wrapped value","SUCCESS","2016-08-21T23:45:02.462+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return a byte primitive value","SUCCESS","2016-08-21T23:45:02.435+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return a char primitive value","SUCCESS","2016-08-21T23:45:02.488+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return a double primitive value","SUCCESS","2016-08-21T23:45:02.687+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return a float primitive value","SUCCESS","2016-08-21T23:45:02.636+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return a long primitive value","SUCCESS","2016-08-21T23:45:02.375+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return a short primitive value","SUCCESS","2016-08-21T23:45:02.286+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return an Enum value","SUCCESS","2016-08-21T23:45:02.315+07:00","0.0","0.03"
"Type manufacturing test","Podam Messaging System should return an int primitive value","SUCCESS","2016-08-21T23:45:02.563+07:00","0.0","0.02"
"Type manufacturing test","Podam Messaging System should return an integer value","SUCCESS","2016-08-21T23:45:02.404+07:00","0.0","0.03"
"External factory unit test","Podam cannot fill interface attributes if the external factory does not manufacture the right type","SUCCESS","2016-08-21T23:45:01.410+07:00","0.0","0.03"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces","SUCCESS","2016-08-21T23:45:01.899+07:00","0.0","0.04"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces which extend Map","SUCCESS","2016-08-21T23:45:01.821+07:00","0.0","0.04"
"Annotations test","Podam should assign exactly the values specified with the @PodamStrategyValue annotation","SUCCESS","2016-08-21T23:44:56.626+07:00","0.0","0.08"
"Annotations test","Podam should assign precise values and lengths when a String is annotated with @PodamStringValue","SUCCESS","2016-08-21T23:44:57.027+07:00","0.0","0.05"
"Factory unit test","Podam should be able to create an abstract class with help of factory","SUCCESS","2016-08-21T23:45:01.592+07:00","0.0","0.04"
"Collections test","Podam should be able to create instances of Concurrent Hash Maps","SUCCESS","2016-08-21T23:44:59.462+07:00","0.0","0.04"
"Collections test","Podam should be able to create instances of Hash Maps","SUCCESS","2016-08-21T23:44:59.548+07:00","0.0","0.04"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2016-08-21T23:45:00.465+07:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2016-08-21T23:44:59.809+07:00","0.0","0.03"
"Collections test","Podam should be able to create instances of Sorted Maps","SUCCESS","2016-08-21T23:44:59.151+07:00","0.0","0.04"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2016-08-21T23:45:00.316+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2016-08-21T23:45:00.020+07:00","0.0","0.04"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2016-08-21T23:44:59.881+07:00","0.0","0.04"
"Collections test","Podam should be able to fill in POJOs with raw type collection attributes and default values to Object","SUCCESS","2016-08-21T23:44:59.111+07:00","0.0","0.04"
"Validated pojo test","Podam should be able to fulfill most of the javax Validation framework","SUCCESS","2016-08-21T23:45:02.949+07:00","0.0","0.08"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2016-08-21T23:44:59.768+07:00","0.0","0.04"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2016-08-21T23:45:00.245+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2016-08-21T23:44:59.917+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2016-08-21T23:44:59.844+07:00","0.0","0.04"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2016-08-21T23:45:00.183+07:00","0.0","0.03"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2016-08-21T23:44:59.724+07:00","0.0","0.04"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2016-08-21T23:45:00.347+07:00","0.0","0.09"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2016-08-21T23:44:59.654+07:00","0.0","0.04"
"Random data provider strategy impl initialisation unit test","Podam should correctly generate HashMaps with Long as key type","SUCCESS","2016-08-21T23:45:00.713+07:00","0.0","0.04"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization disabled","SUCCESS","2016-08-21T23:45:00.117+07:00","0.0","0.03"
"Constructors unit test","Podam should correctly handle generic collections in constructor with memoization enabled","SUCCESS","2016-08-21T23:44:59.982+07:00","0.0","0.04"
"Extensions test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2016-08-21T23:45:01.175+07:00","0.0","0.04"
"Random data provider strategy impl initialisation unit test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2016-08-21T23:45:00.751+07:00","0.0","0.03"
"Read only complex types test","Podam should create an instance of an Abstract class with a factory method which returns a concrete type even if the concrete type has got read-only attributes. These will be empty.","SUCCESS","2016-08-21T23:45:00.535+07:00","0.0","0.04"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2016-08-21T23:45:00.056+07:00","0.0","0.03"
"Extensions test","Podam should fill AttributeMetadata with the attribute name","SUCCESS","2016-08-21T23:45:01.215+07:00","0.0","0.03"
"Podam factory basic types test","Podam should fill Java native types","SUCCESS","2016-08-21T23:44:58.456+07:00","0.0","0.05"
"External factory unit test","Podam should fill POJOs and interface attributes if a full constructor sets the interface attribute value","SUCCESS","2016-08-21T23:45:01.470+07:00","0.0","0.04"
"Podam factory basic types test","Podam should fill POJOs with non default constructors","SUCCESS","2016-08-21T23:44:58.864+07:00","0.0","0.03"
"Abnormal pojos test","Podam should fill POJOs with protected, non default constructors","SUCCESS","2016-08-21T23:45:00.960+07:00","0.0","0.02"
"Abnormal pojos test","Podam should fill POJOs with public, non default constructors","SUCCESS","2016-08-21T23:45:00.904+07:00","0.0","0.03"
"Podam factory basic types test","Podam should fill arrays with elements","SUCCESS","2016-08-21T23:44:58.785+07:00","0.0","0.04"
"Abnormal pojos test","Podam should fill embedded abstract classes if a concrete type has been specified","SUCCESS","2016-08-21T23:45:00.933+07:00","0.0","0.03"
"Podam factory basic types test","Podam should fill in Maps of the containing class type","SUCCESS","2016-08-21T23:44:58.535+07:00","0.0","0.09"
"Read only complex types test","Podam should fill in POJOs which contain internal loops (e.g. objects that reference parents)","SUCCESS","2016-08-21T23:45:00.616+07:00","0.0","0.03"
"Podam factory basic types test","Podam should fill in POJOs which have a circular dependency","SUCCESS","2016-08-21T23:44:58.958+07:00","0.0","0.07"
"Podam factory basic types test","Podam should fill in POJOs with Enums","SUCCESS","2016-08-21T23:44:58.504+07:00","0.0","0.03"
"Collections test","Podam should fill in POJOs with attributes containing wildcards","SUCCESS","2016-08-21T23:44:59.584+07:00","0.0","0.04"
"Podam factory basic types test","Podam should fill in a POJO with basic jvm types","SUCCESS","2016-08-21T23:44:58.655+07:00","0.0","0.05"
"Read only complex types test","Podam should fill in complex (e.g. with more than two generic types), read-only POJOs","SUCCESS","2016-08-21T23:45:00.572+07:00","0.0","0.04"
"Podam factory basic types test","Podam should fill in lists of the containing class type","SUCCESS","2016-08-21T23:44:58.892+07:00","0.0","0.07"
"Read only complex types test","Podam should fill in read-only POJOs","SUCCESS","2016-08-21T23:45:00.650+07:00","0.0","0.03"
"Walk through example unit test","Podam should fill in the Address POJO correctly","SUCCESS","2016-08-21T23:45:03.260+07:00","0.0","0.02"
"Walk through example unit test","Podam should fill in the Bank Account POJO correctly","SUCCESS","2016-08-21T23:45:03.236+07:00","0.0","0.02"
"Walk through example unit test","Podam should fill in the Country POJO correctly","SUCCESS","2016-08-21T23:45:03.055+07:00","0.0","0.07"
"Walk through example unit test","Podam should fill in the Order POJO correctly","SUCCESS","2016-08-21T23:45:03.186+07:00","0.0","0.03"
"Podam factory basic types test","Podam should fill recursive POJOs correctly, including all their fields","SUCCESS","2016-08-21T23:44:58.829+07:00","0.0","0.03"
"Podam factory basic types test","Podam should fill recursive POJOs when invoking the factory population directly","SUCCESS","2016-08-21T23:44:58.748+07:00","0.0","0.04"
"Walk through example unit test","Podam should fill the Article POJO correctly","SUCCESS","2016-08-21T23:45:03.213+07:00","0.0","0.02"
"Walk through example unit test","Podam should fill the Client POJO correctly","SUCCESS","2016-08-21T23:45:03.128+07:00","0.0","0.06"
"Walk through example unit test","Podam should fill the OrderItem POJO correctly","SUCCESS","2016-08-21T23:45:03.281+07:00","0.0","0.02"
"Abnormal pojos test","Podam should fill values invoking children setters accepting a type different from the parent type","SUCCESS","2016-08-21T23:45:00.801+07:00","0.0","0.03"
"Class info test","Podam should generate a ClassInfo which contains information for the setters contained in the POJO","SUCCESS","2016-08-21T23:44:59.082+07:00","0.0","0.0"
"Abnormal pojos test","Podam should generate a non null POJO for Abstract types with a concrete type","SUCCESS","2016-08-21T23:45:01.009+07:00","0.0","0.02"
"Annotations test","Podam should handle POJOs with annotated field and setter","SUCCESS","2016-08-21T23:44:56.768+07:00","0.0","0.04"
"Annotations test","Podam should handle POJOs with constructors that have one or more self references to the POJO class, provided the required constructor is annotated with @PodamConstructor","SUCCESS","2016-08-21T23:44:56.849+07:00","0.0","0.04"
"Collections test","Podam should handle POJOs with no setters and collections in the constructor","SUCCESS","2016-08-21T23:44:59.346+07:00","0.0","0.04"
"Abnormal pojos test","Podam should handle POJOs with private constructors only","SUCCESS","2016-08-21T23:45:01.088+07:00","0.0","0.03"
"Abnormal pojos test","Podam should handle POJOs with self reference constructors but not default constructors without the need for the @PodamConstructor annotation","SUCCESS","2016-08-21T23:45:01.033+07:00","0.0","0.03"
"Singletons test","Podam should handle Singletons with parameters in the static method","SUCCESS","2016-08-21T23:45:02.162+07:00","0.0","0.07"
"Non EJB pojo test","Podam should handle attributes in accordance with custom Class Info Strategies","SUCCESS","2016-08-21T23:45:01.262+07:00","0.0","0.03"
"Inheritance test","Podam should handle basic inheritance scenarios","SUCCESS","2016-08-21T23:45:01.698+07:00","0.0","0.04"
"Boolean unit test","Podam should handle booleans correctly","SUCCESS","2016-08-21T23:44:58.223+07:00","0.0","0.04"
"Annotations test","Podam should handle both native and wrapped boolean values with @PodamBooleanValue annotation","SUCCESS","2016-08-21T23:44:56.386+07:00","0.0","0.06"
"Annotations test","Podam should handle both native and wrapped byte values with @PodamByteValue annotation","SUCCESS","2016-08-21T23:44:56.448+07:00","0.0","0.07"
"Annotations test","Podam should handle both native and wrapped char values with @PodamCharValue annotation","SUCCESS","2016-08-21T23:44:56.519+07:00","0.0","0.05"
"Annotations test","Podam should handle both native and wrapped double values with @PodamDoubleValue annotation","SUCCESS","2016-08-21T23:44:56.573+07:00","0.0","0.05"
"Annotations test","Podam should handle both native and wrapped float values with @PodamFloatValue annotation","SUCCESS","2016-08-21T23:44:56.806+07:00","0.0","0.04"
"Annotations test","Podam should handle both native and wrapped integer values with @PodamIntValue annotation","SUCCESS","2016-08-21T23:44:56.306+07:00","0.0","0.08"
"Annotations test","Podam should handle both native and wrapped long values with @PodamLongValue annotation","SUCCESS","2016-08-21T23:44:56.893+07:00","0.0","0.04"
"Annotations test","Podam should handle both native and wrapped short values with @PodamShortValue annotation","SUCCESS","2016-08-21T23:44:56.939+07:00","0.0","0.04"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2016-08-21T23:45:00.084+07:00","0.0","0.03"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2016-08-21T23:45:00.215+07:00","0.0","0.03"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2016-08-21T23:45:00.277+07:00","0.0","0.04"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2016-08-21T23:45:00.147+07:00","0.0","0.03"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2016-08-21T23:45:00.434+07:00","0.0","0.03"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2016-08-21T23:44:59.952+07:00","0.0","0.03"
"Annotations test","Podam should handle immutable POJOs annotated with @PodamConstructor","SUCCESS","2016-08-21T23:44:56.711+07:00","0.0","0.06"
"Collections test","Podam should handle immutable POJOs with generified collections in the constructor","SUCCESS","2016-08-21T23:44:59.385+07:00","0.0","0.08"
"Collections test","Podam should handle immutable Pojos with non generic collections","SUCCESS","2016-08-21T23:44:59.506+07:00","0.0","0.04"
"Podam factory basic types test","Podam should handle immutable non annotated POJOs","SUCCESS","2016-08-21T23:44:58.414+07:00","0.0","0.04"
"Collections test","Podam should handle standard collections","SUCCESS","2016-08-21T23:44:59.189+07:00","0.0","0.16"
"Inheritance test","Podam should handle the manufacturing of POJOs which inherit from other classes","SUCCESS","2016-08-21T23:45:01.772+07:00","0.0","0.03"
"Class unit test","Podam should handle the manufacturing of POJOs with generic types in constructor","SUCCESS","2016-08-21T23:44:58.289+07:00","0.0","0.04"
"Class unit test","Podam should handle the manufacturing of basic types","SUCCESS","2016-08-21T23:44:58.332+07:00","0.0","0.03"
"Class unit test","Podam should handle the manufacturing of generic POJOs","SUCCESS","2016-08-21T23:44:58.366+07:00","0.0","0.03"
"Inheritance test","Podam should manufacture all POJOs in a tree hierarchy","SUCCESS","2016-08-21T23:45:01.735+07:00","0.0","0.04"
"Inheritance test","Podam should manufacture attributes implementing Collection and Map interfaces","SUCCESS","2016-08-21T23:45:01.652+07:00","0.0","0.04"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2016-08-21T23:44:59.691+07:00","0.0","0.03"
"External factory unit test","Podam should not be able to create instances of an Abstract class even if the POJO has a full constructor","SUCCESS","2016-08-21T23:45:01.311+07:00","0.0","0.04"
"External factory unit test","Podam should not be able to create instances of an Abstract class if the external factory does not provide a concrete implementation","SUCCESS","2016-08-21T23:45:01.380+07:00","0.0","0.03"
"External factory unit test","Podam should not create instances of an interface when given an external factory which does not manufacture the concrete type","SUCCESS","2016-08-21T23:45:01.437+07:00","0.0","0.03"
"External factory unit test","Podam should not create instances of non-instantiable classes","SUCCESS","2016-08-21T23:45:01.351+07:00","0.0","0.03"
"Annotations test","Podam should not fill POJO's attributes annotated with @PodamExclude","SUCCESS","2016-08-21T23:44:56.001+07:00","0.0","0.17"
"Abnormal pojos test","Podam should return a null value for non instantiable POJOs","SUCCESS","2016-08-21T23:45:00.985+07:00","0.0","0.02"
"Class info test","Podam should return valid class info for POJOs with no attributes","SUCCESS","2016-08-21T23:44:59.068+07:00","0.0","0.0"
"Abnormal pojos test","Podam should throw an exception if a POJO contains invalid getters or setters","SUCCESS","2016-08-21T23:45:01.064+07:00","0.0","0.02"
"Multiple interfaces inheritance test","Podam will create an instance of a POJO but its interface types won't be instantiated","SUCCESS","2016-08-21T23:45:01.862+07:00","0.0","0.04"
"Annotations test","The @PodamCollection annotation should allow to set sizes on all collections and arrays","SUCCESS","2016-08-21T23:44:56.978+07:00","0.0","0.05"
"Class info test","The ClassInfo object created for a class should handle @PodamExcludeAnnotations","SUCCESS","2016-08-21T23:44:59.072+07:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","The Random Data Provider Strategy should be initialised correctly and allow for changes in the number of collection elements","SUCCESS","2016-08-21T23:45:00.698+07:00","0.0","0.0"
"External factory unit test","The management of external factories should be correct and chaining should work","SUCCESS","2016-08-21T23:45:01.377+07:00","0.0","0.0"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of XMLGregorianCalendar","SUCCESS","2016-08-21T23:45:03.386+07:00","0.0","0.03"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of the Duration class","SUCCESS","2016-08-21T23:45:03.325+07:00","0.0","0.03"
"XML datatype unit test","When given an external factory, Podam should be able to fill POJOs with instance attributes containing XMLGregorianCalendar and Duration","SUCCESS","2016-08-21T23:45:03.360+07:00","0.0","0.03"
"Memoization test","When memoization is set to false Podam should return different instances for different invocations","SUCCESS","2016-08-21T23:45:01.954+07:00","0.0","0.04"
"Memoization test","When memoization is set to true Podam should return the same instance for different invocations","SUCCESS","2016-08-21T23:45:01.992+07:00","0.0","0.04"
"Validated pojo test","When the @Size annotation doesn't have a max length specified, Podam should assign a sensible value","SUCCESS","2016-08-21T23:45:02.834+07:00","0.0","0.11"
