"Story","Title","Result","Date","Stability","Duration (s)"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2015-06-21T21:03:06.409+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2015-06-21T21:03:06.060+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2015-06-21T21:03:06.349+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2015-06-21T21:03:06.174+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2015-06-21T21:03:06.107+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2015-06-21T21:03:06.043+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2015-06-21T21:03:06.306+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2015-06-21T21:03:06.128+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2015-06-21T21:03:06.085+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2015-06-21T21:03:06.266+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2015-06-21T21:03:06.026+01:00","0.0","0.02"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2015-06-21T21:03:06.368+01:00","0.0","0.02"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2015-06-21T21:03:05.989+01:00","0.0","0.02"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2015-06-21T21:03:06.195+01:00","0.0","0.02"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2015-06-21T21:03:06.220+01:00","0.0","0.02"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2015-06-21T21:03:06.288+01:00","0.0","0.02"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2015-06-21T21:03:06.326+01:00","0.0","0.02"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2015-06-21T21:03:06.244+01:00","0.0","0.02"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2015-06-21T21:03:06.390+01:00","0.0","0.02"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2015-06-21T21:03:06.153+01:00","0.0","0.02"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2015-06-21T21:03:06.008+01:00","0.0","0.02"
