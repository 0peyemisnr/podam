"Story","Title","Result","Date","Stability","Duration (s)"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method heavy comparator","SUCCESS","2015-06-21T21:03:07.060+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a Method light comparator","SUCCESS","2015-06-21T21:03:07.077+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor heavy comparator","SUCCESS","2015-06-21T21:03:07.051+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","Creating a Random Data Provider Strategy should create a constructor light comparator","SUCCESS","2015-06-21T21:03:07.069+01:00","0.0","0.01"
"Memoization test","Even when memoization is true, if generics Pojos have different types, objects should not be equal","SUCCESS","2015-06-21T21:03:09.568+01:00","0.0","0.02"
"Class info test","In Presence of excluded attributes, the Class Info object should not contain those attributes","SUCCESS","2015-06-21T21:03:05.134+01:00","0.0","0.02"
"Abnormal pojos test","Invoking Podam on a POJO with a circular constructor (e.g. java.net.URL) leads to a null POJO","SUCCESS","2015-06-21T21:03:07.366+01:00","0.0","0.03"
"Abnormal pojos test","Invoking Podam on a POJO with a private, no arguments constructor, should return a non null POJO","SUCCESS","2015-06-21T21:03:07.347+01:00","0.0","0.02"
"Abnormal pojos test","Invoking Podam on a POJO with both circular and non circular constructors (e.g. javax.activation.DataHandler) should lead to a non empty POJO","SUCCESS","2015-06-21T21:03:07.559+01:00","0.0","0.04"
"Podam factory basic types test","Invoking Podam on an Abstract class should return a null pojo","SUCCESS","2015-06-21T21:03:04.490+01:00","0.0","0.02"
"Podam factory basic types test","Invoking Podam on an interface should return an empty POJO","SUCCESS","2015-06-21T21:03:04.412+01:00","0.0","0.02"
"Memoization test","Memoization should work correctly for collections and arrays","SUCCESS","2015-06-21T21:03:09.502+01:00","0.0","0.04"
"Memoization test","Memoization should work for recursive Pojos","SUCCESS","2015-06-21T21:03:09.592+01:00","0.0","0.02"
"Memoization test","Memoization should work with Generics","SUCCESS","2015-06-21T21:03:09.543+01:00","0.0","0.02"
"External factory unit test","Podam cannot fill interface attributes if the external factory does not manufacture the right type","SUCCESS","2015-06-21T21:03:08.502+01:00","0.0","0.03"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces","SUCCESS","2015-06-21T21:03:09.232+01:00","0.0","0.03"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces which extend Map","SUCCESS","2015-06-21T21:03:09.178+01:00","0.0","0.02"
"Annotations test","Podam should assign exactly the values specified with the @PodamStrategyValue annotation","SUCCESS","2015-06-21T21:03:01.325+01:00","0.0","0.15"
"Annotations test","Podam should assign precise values and lengths when a String is annotated with @PodamStringValue","SUCCESS","2015-06-21T21:03:01.776+01:00","0.0","0.03"
"Collections test","Podam should be able to create instances of Concurrent Hash Maps","SUCCESS","2015-06-21T21:03:05.598+01:00","0.0","0.03"
"Collections test","Podam should be able to create instances of Hash Maps","SUCCESS","2015-06-21T21:03:05.662+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2015-06-21T21:03:06.409+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2015-06-21T21:03:06.060+01:00","0.0","0.02"
"Collections test","Podam should be able to create instances of Sorted Maps","SUCCESS","2015-06-21T21:03:05.368+01:00","0.0","0.03"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2015-06-21T21:03:06.349+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2015-06-21T21:03:06.174+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2015-06-21T21:03:06.107+01:00","0.0","0.02"
"Collections test","Podam should be able to fill in POJOs with raw type collection attributes and default values to Object","SUCCESS","2015-06-21T21:03:05.344+01:00","0.0","0.02"
"Validated pojo test","Podam should be able to fulfill most of the javax Validation framework","SUCCESS","2015-06-21T21:03:10.055+01:00","0.0","0.24"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2015-06-21T21:03:06.043+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2015-06-21T21:03:06.306+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2015-06-21T21:03:06.128+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2015-06-21T21:03:06.085+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2015-06-21T21:03:06.266+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2015-06-21T21:03:06.026+01:00","0.0","0.02"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2015-06-21T21:03:06.368+01:00","0.0","0.02"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2015-06-21T21:03:05.989+01:00","0.0","0.02"
"Random data provider strategy impl initialisation unit test","Podam should correctly generate HashMaps with Long as key type","SUCCESS","2015-06-21T21:03:07.087+01:00","0.0","0.02"
"Extensions test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2015-06-21T21:03:07.846+01:00","0.0","0.03"
"Random data provider strategy impl initialisation unit test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2015-06-21T21:03:07.107+01:00","0.0","0.03"
"Read only complex types test","Podam should create an instance of an Abstract class with a factory method which returns a concrete type even if the concrete type has got read-only attributes. These will be empty.","SUCCESS","2015-06-21T21:03:06.721+01:00","0.0","0.02"
"Constructors unit test","Podam should create instances of POJOs extending generic classes","SUCCESS","2015-06-21T21:03:06.195+01:00","0.0","0.02"
"Extensions test","Podam should fill AttributeMetadata with the attribute name","SUCCESS","2015-06-21T21:03:07.873+01:00","0.0","0.03"
"Podam factory basic types test","Podam should fill Java native types","SUCCESS","2015-06-21T21:03:04.171+01:00","0.0","0.1"
"External factory unit test","Podam should fill POJOs and interface attributes if a full constructor sets the interface attribute value","SUCCESS","2015-06-21T21:03:08.555+01:00","0.0","0.03"
"Podam factory basic types test","Podam should fill POJOs with non default constructors","SUCCESS","2015-06-21T21:03:04.587+01:00","0.0","0.02"
"Abnormal pojos test","Podam should fill POJOs with protected, non default constructors","SUCCESS","2015-06-21T21:03:07.435+01:00","0.0","0.02"
"Abnormal pojos test","Podam should fill POJOs with public, non default constructors","SUCCESS","2015-06-21T21:03:07.393+01:00","0.0","0.02"
"Podam factory basic types test","Podam should fill arrays with elements","SUCCESS","2015-06-21T21:03:04.536+01:00","0.0","0.03"
"Abnormal pojos test","Podam should fill embedded abstract classes if a concrete type has been specified","SUCCESS","2015-06-21T21:03:07.411+01:00","0.0","0.02"
"Podam factory basic types test","Podam should fill in Maps of the containing class type","SUCCESS","2015-06-21T21:03:04.306+01:00","0.0","0.1"
"Read only complex types test","Podam should fill in POJOs which contain internal loops (e.g. objects that reference parents)","SUCCESS","2015-06-21T21:03:06.764+01:00","0.0","0.02"
"Podam factory basic types test","Podam should fill in POJOs which have a circular dependency","SUCCESS","2015-06-21T21:03:04.733+01:00","0.0","0.03"
"Podam factory basic types test","Podam should fill in POJOs with Enums","SUCCESS","2015-06-21T21:03:04.273+01:00","0.0","0.03"
"Collections test","Podam should fill in POJOs with attributes containing wildcards","SUCCESS","2015-06-21T21:03:05.687+01:00","0.0","0.02"
"Podam factory basic types test","Podam should fill in a POJO with basic jvm types","SUCCESS","2015-06-21T21:03:04.438+01:00","0.0","0.05"
"Read only complex types test","Podam should fill in complex (e.g. with more than two generic types), read-only POJOs","SUCCESS","2015-06-21T21:03:06.737+01:00","0.0","0.03"
"Podam factory basic types test","Podam should fill in lists of the containing class type","SUCCESS","2015-06-21T21:03:04.612+01:00","0.0","0.12"
"Read only complex types test","Podam should fill in read-only POJOs","SUCCESS","2015-06-21T21:03:06.787+01:00","0.0","0.02"
"Walk through example unit test","Podam should fill in the Address POJO correctly","SUCCESS","2015-06-21T21:03:10.764+01:00","0.0","0.02"
"Walk through example unit test","Podam should fill in the Bank Account POJO correctly","SUCCESS","2015-06-21T21:03:10.751+01:00","0.0","0.01"
"Walk through example unit test","Podam should fill in the Country POJO correctly","SUCCESS","2015-06-21T21:03:10.522+01:00","0.0","0.02"
"Walk through example unit test","Podam should fill in the Order POJO correctly","SUCCESS","2015-06-21T21:03:10.698+01:00","0.0","0.04"
"Podam factory basic types test","Podam should fill recursive POJOs correctly, including all their fields","SUCCESS","2015-06-21T21:03:04.562+01:00","0.0","0.02"
"Podam factory basic types test","Podam should fill recursive POJOs when invoking the factory population directly","SUCCESS","2015-06-21T21:03:04.514+01:00","0.0","0.02"
"Walk through example unit test","Podam should fill the Article POJO correctly","SUCCESS","2015-06-21T21:03:10.737+01:00","0.0","0.01"
"Walk through example unit test","Podam should fill the Client POJO correctly","SUCCESS","2015-06-21T21:03:10.542+01:00","0.0","0.15"
"Walk through example unit test","Podam should fill the OrderItem POJO correctly","SUCCESS","2015-06-21T21:03:10.780+01:00","0.0","0.02"
"Abnormal pojos test","Podam should fill values invoking children setters accepting a type different from the parent type","SUCCESS","2015-06-21T21:03:07.330+01:00","0.0","0.02"
"Class info test","Podam should generate a ClassInfo which contains information for the setters contained in the POJO","SUCCESS","2015-06-21T21:03:05.151+01:00","0.0","0.01"
"Abnormal pojos test","Podam should generate a non null POJO for Abstract types with a concrete type","SUCCESS","2015-06-21T21:03:07.476+01:00","0.0","0.02"
"Annotations test","Podam should handle POJOs with constructors that have one or more self references to the POJO class, provided the required constructor is annotated with @PodamConstructor","SUCCESS","2015-06-21T21:03:01.594+01:00","0.0","0.04"
"Collections test","Podam should handle POJOs with no setters and collections in the constructor","SUCCESS","2015-06-21T21:03:05.501+01:00","0.0","0.03"
"Abnormal pojos test","Podam should handle POJOs with private constructors only","SUCCESS","2015-06-21T21:03:07.539+01:00","0.0","0.02"
"Abnormal pojos test","Podam should handle POJOs with self reference constructors but not default constructors without the need for the @PodamConstructor annotation","SUCCESS","2015-06-21T21:03:07.498+01:00","0.0","0.03"
"Singletons test","Podam should handle Singletons with parameters in the static method","SUCCESS","2015-06-21T21:03:09.848+01:00","0.0","0.04"
"Non EJB pojo test","Podam should handle attributes in accordance with custom Class Info Strategies","SUCCESS","2015-06-21T21:03:08.162+01:00","0.0","0.02"
"Inheritance test","Podam should handle basic inheritance scenarios","SUCCESS","2015-06-21T21:03:08.886+01:00","0.0","0.02"
"Boolean unit test","Podam should handle booleans correctly","SUCCESS","2015-06-21T21:03:03.405+01:00","0.0","0.03"
"Annotations test","Podam should handle both native and wrapped boolean values with @PodamBooleanValue annotation","SUCCESS","2015-06-21T21:03:01.082+01:00","0.0","0.05"
"Annotations test","Podam should handle both native and wrapped byte values with @PodamByteValue annotation","SUCCESS","2015-06-21T21:03:01.138+01:00","0.0","0.06"
"Annotations test","Podam should handle both native and wrapped char values with @PodamCharValue annotation","SUCCESS","2015-06-21T21:03:01.203+01:00","0.0","0.07"
"Annotations test","Podam should handle both native and wrapped double values with @PodamDoubleValue annotation","SUCCESS","2015-06-21T21:03:01.273+01:00","0.0","0.05"
"Annotations test","Podam should handle both native and wrapped float values with @PodamFloatValue annotation","SUCCESS","2015-06-21T21:03:01.527+01:00","0.0","0.07"
"Annotations test","Podam should handle both native and wrapped integer values with @PodamIntValue annotation","SUCCESS","2015-06-21T21:03:00.997+01:00","0.0","0.08"
"Annotations test","Podam should handle both native and wrapped long values with @PodamLongValue annotation","SUCCESS","2015-06-21T21:03:01.635+01:00","0.0","0.05"
"Annotations test","Podam should handle both native and wrapped short values with @PodamShortValue annotation","SUCCESS","2015-06-21T21:03:01.691+01:00","0.0","0.05"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2015-06-21T21:03:06.220+01:00","0.0","0.02"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2015-06-21T21:03:06.288+01:00","0.0","0.02"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2015-06-21T21:03:06.326+01:00","0.0","0.02"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2015-06-21T21:03:06.244+01:00","0.0","0.02"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2015-06-21T21:03:06.390+01:00","0.0","0.02"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2015-06-21T21:03:06.153+01:00","0.0","0.02"
"Annotations test","Podam should handle immutable POJOs annotated with @PodamConstructor","SUCCESS","2015-06-21T21:03:01.473+01:00","0.0","0.05"
"Collections test","Podam should handle immutable POJOs with generified collections in the constructor","SUCCESS","2015-06-21T21:03:05.528+01:00","0.0","0.07"
"Collections test","Podam should handle immutable Pojos with non generic collections","SUCCESS","2015-06-21T21:03:05.625+01:00","0.0","0.04"
"Podam factory basic types test","Podam should handle immutable non annotated POJOs","SUCCESS","2015-06-21T21:03:04.133+01:00","0.0","0.04"
"Collections test","Podam should handle standard collections","SUCCESS","2015-06-21T21:03:05.395+01:00","0.0","0.1"
"Inheritance test","Podam should handle the manufacturing of POJOs which inherit from other classes","SUCCESS","2015-06-21T21:03:08.933+01:00","0.0","0.02"
"Class unit test","Podam should handle the manufacturing of POJOs with generic types in constructor","SUCCESS","2015-06-21T21:03:03.715+01:00","0.0","0.03"
"Class unit test","Podam should handle the manufacturing of basic types","SUCCESS","2015-06-21T21:03:03.746+01:00","0.0","0.02"
"Class unit test","Podam should handle the manufacturing of generic POJOs","SUCCESS","2015-06-21T21:03:03.771+01:00","0.0","0.02"
"Inheritance test","Podam should manufacture all POJOs in a tree hierarchy","SUCCESS","2015-06-21T21:03:08.911+01:00","0.0","0.02"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2015-06-21T21:03:06.008+01:00","0.0","0.02"
"External factory unit test","Podam should not be able to create instances of an Abstract class even if the POJO has a full constructor","SUCCESS","2015-06-21T21:03:08.413+01:00","0.0","0.02"
"External factory unit test","Podam should not be able to create instances of an Abstract class if the external factory does not provide a concrete implementation","SUCCESS","2015-06-21T21:03:08.475+01:00","0.0","0.03"
"External factory unit test","Podam should not create instances of an interface when given an external factory which does not manufacture the concrete type","SUCCESS","2015-06-21T21:03:08.530+01:00","0.0","0.02"
"External factory unit test","Podam should not create instances of non-instantiable classes","SUCCESS","2015-06-21T21:03:08.436+01:00","0.0","0.02"
"Annotations test","Podam should not fill POJO's attributes annotated with @PodamExclude","SUCCESS","2015-06-21T21:03:00.593+01:00","0.0","0.25"
"Abnormal pojos test","Podam should return a null value for non instantiable POJOs","SUCCESS","2015-06-21T21:03:07.457+01:00","0.0","0.02"
"Class info test","Podam should return valid class info for POJOs with no attributes","SUCCESS","2015-06-21T21:03:05.110+01:00","0.0","0.01"
"Abnormal pojos test","Podam should throw an exception if a POJO contains invalid getters or setters","SUCCESS","2015-06-21T21:03:07.527+01:00","0.0","0.01"
"Multiple interfaces inheritance test","Podam will create an instance of a POJO but its interface types won't be instantiated","SUCCESS","2015-06-21T21:03:09.201+01:00","0.0","0.03"
"Annotations test","The @PodamCollection annotation should allow to set sizes on all collections and arrays","SUCCESS","2015-06-21T21:03:01.738+01:00","0.0","0.04"
"Class info test","The ClassInfo object created for a class should handle @PodamExcludeAnnotations","SUCCESS","2015-06-21T21:03:05.121+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","The Random Data Provider Strategy should be initialised correctly and allow for changes in the number of collection elements","SUCCESS","2015-06-21T21:03:07.044+01:00","0.0","0.01"
"External factory unit test","The management of external factories should be correct and chaining should work","SUCCESS","2015-06-21T21:03:08.459+01:00","0.0","0.02"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of XMLGregorianCalendar","SUCCESS","2015-06-21T21:03:11.066+01:00","0.0","0.02"
"XML datatype unit test","When given an external factory, Podam should be able to create instances of the Duration class","SUCCESS","2015-06-21T21:03:11.020+01:00","0.0","0.02"
"XML datatype unit test","When given an external factory, Podam should be able to fill POJOs with instance attributes containing XMLGregorianCalendar and Duration","SUCCESS","2015-06-21T21:03:11.043+01:00","0.0","0.02"
"Memoization test","When memoization is set to false Podam should return different instances for different invocations","SUCCESS","2015-06-21T21:03:09.455+01:00","0.0","0.02"
"Memoization test","When memoization is set to true Podam should return the same instance for different invocations","SUCCESS","2015-06-21T21:03:09.479+01:00","0.0","0.02"
