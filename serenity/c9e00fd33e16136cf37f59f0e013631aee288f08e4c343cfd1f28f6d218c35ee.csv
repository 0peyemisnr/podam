"Story","Title","Result","Date","Stability","Duration (s)"
"Memoization test","Even when memoization is true, if generics Pojos have different types, objects should not be equal","SUCCESS","2015-06-20T21:17:21.446+01:00","0.0","0.02"
"Class info test","In Presence of excluded attributes, the Class Info object should not contain those attributes","SUCCESS","2015-06-20T21:17:17.657+01:00","0.0","0.01"
"Abnormal pojos test","Invoking Podam on a POJO with a circular constructor (e.g. java.net.URL) leads to a null POJO","SUCCESS","2015-06-20T21:17:19.378+01:00","0.0","0.04"
"Abnormal pojos test","Invoking Podam on a POJO with a private, no arguments constructor, should return a non null POJO","SUCCESS","2015-06-20T21:17:19.355+01:00","0.0","0.02"
"Abnormal pojos test","Invoking Podam on a POJO with both circular and non circular constructors (e.g. javax.activation.DataHandler) should lead to a non empty POJO","SUCCESS","2015-06-20T21:17:19.649+01:00","0.0","0.04"
"Podam factory basic types test","Invoking Podam on an Abstract class should return a null pojo","SUCCESS","2015-06-20T21:17:17.100+01:00","0.0","0.02"
"Podam factory basic types test","Invoking Podam on an interface should return an empty POJO","SUCCESS","2015-06-20T21:17:17.038+01:00","0.0","0.02"
"Memoization test","Memoization should work correctly for collections and arrays","SUCCESS","2015-06-20T21:17:21.373+01:00","0.0","0.04"
"Memoization test","Memoization should work for recursive Pojos","SUCCESS","2015-06-20T21:17:21.465+01:00","0.0","0.01"
"Memoization test","Memoization should work with Generics","SUCCESS","2015-06-20T21:17:21.414+01:00","0.0","0.03"
"External factory unit test","Podam cannot fill interface attributes if the external factory does not manufacture the right type","SUCCESS","2015-06-20T21:17:20.455+01:00","0.0","0.03"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces","SUCCESS","2015-06-20T21:17:21.093+01:00","0.0","0.03"
"Multiple interfaces inheritance test","Podam cannot instantiate interfaces which extend Map","SUCCESS","2015-06-20T21:17:21.037+01:00","0.0","0.02"
"Annotations test","Podam should assign exactly the values specified with the @PodamStrategyValue annotation","SUCCESS","2015-06-20T21:17:13.879+01:00","0.0","0.14"
"Annotations test","Podam should assign precise values and lengths when a String is annotated with @PodamStringValue","SUCCESS","2015-06-20T21:17:14.431+01:00","0.0","0.03"
"Constructors unit test","Podam should be able to create instances of JAXBElement","SUCCESS","2015-06-20T21:17:18.833+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of JAXBElements declared as instance variables in a POJO","SUCCESS","2015-06-20T21:17:18.495+01:00","0.0","0.03"
"Constructors unit test","Podam should be able to create instances of abstract POJOs with factory methods which return concrete types","SUCCESS","2015-06-20T21:17:18.773+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of generic POJOs with factory methods when the concrete type is known","SUCCESS","2015-06-20T21:17:18.617+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to create instances of inner classes","SUCCESS","2015-06-20T21:17:18.550+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Collections","SUCCESS","2015-06-20T21:17:18.468+01:00","0.0","0.03"
"Constructors unit test","Podam should be able to instantiate POJOs with immutable Maps","SUCCESS","2015-06-20T21:17:18.729+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture POJOs which contain immutable collections","SUCCESS","2015-06-20T21:17:18.572+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture any type of Lists","SUCCESS","2015-06-20T21:17:18.527+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture any type of Maps","SUCCESS","2015-06-20T21:17:18.687+01:00","0.0","0.02"
"Constructors unit test","Podam should be able to manufacture instances of the Observable class","SUCCESS","2015-06-20T21:17:18.449+01:00","0.0","0.02"
"Constructors unit test","Podam should choose the fullest constructor when invoked for full data","SUCCESS","2015-06-20T21:17:18.791+01:00","0.0","0.02"
"Constructors unit test","Podam should choose the lightest constructor when the standard manufacturing method is invoked","SUCCESS","2015-06-20T21:17:18.396+01:00","0.0","0.02"
"Extensions test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2015-06-20T21:17:19.946+01:00","0.0","0.03"
"Random data provider strategy impl initialisation unit test","Podam should create POJOs in accordance with custom data provider strategies","SUCCESS","2015-06-20T21:17:19.099+01:00","0.0","0.01"
"Extensions test","Podam should fill AttributeMetadata with the attribute name","SUCCESS","2015-06-20T21:17:19.973+01:00","0.0","0.02"
"Podam factory basic types test","Podam should fill Java native types","SUCCESS","2015-06-20T21:17:16.832+01:00","0.0","0.05"
"External factory unit test","Podam should fill POJOs and interface attributes if a full constructor sets the interface attribute value","SUCCESS","2015-06-20T21:17:20.515+01:00","0.0","0.03"
"Podam factory basic types test","Podam should fill POJOs with non default constructors","SUCCESS","2015-06-20T21:17:17.190+01:00","0.0","0.02"
"Abnormal pojos test","Podam should fill POJOs with protected, non default constructors","SUCCESS","2015-06-20T21:17:19.513+01:00","0.0","0.02"
"Abnormal pojos test","Podam should fill POJOs with public, non default constructors","SUCCESS","2015-06-20T21:17:19.416+01:00","0.0","0.07"
"Podam factory basic types test","Podam should fill arrays with elements","SUCCESS","2015-06-20T21:17:17.143+01:00","0.0","0.02"
"Abnormal pojos test","Podam should fill embedded abstract classes if a concrete type has been specified","SUCCESS","2015-06-20T21:17:19.484+01:00","0.0","0.03"
"Podam factory basic types test","Podam should fill in Maps of the containing class type","SUCCESS","2015-06-20T21:17:16.922+01:00","0.0","0.11"
"Podam factory basic types test","Podam should fill in POJOs which have a circular dependency","SUCCESS","2015-06-20T21:17:17.307+01:00","0.0","0.02"
"Podam factory basic types test","Podam should fill in POJOs with Enums","SUCCESS","2015-06-20T21:17:16.888+01:00","0.0","0.03"
"Podam factory basic types test","Podam should fill in a POJO with basic jvm types","SUCCESS","2015-06-20T21:17:17.061+01:00","0.0","0.03"
"Podam factory basic types test","Podam should fill in lists of the containing class type","SUCCESS","2015-06-20T21:17:17.211+01:00","0.0","0.1"
"Podam factory basic types test","Podam should fill recursive POJOs correctly, including all their fields","SUCCESS","2015-06-20T21:17:17.167+01:00","0.0","0.02"
"Podam factory basic types test","Podam should fill recursive POJOs when invoking the factory population directly","SUCCESS","2015-06-20T21:17:17.122+01:00","0.0","0.02"
"Abnormal pojos test","Podam should fill values invoking children setters accepting a type different from the parent type","SUCCESS","2015-06-20T21:17:19.335+01:00","0.0","0.02"
"Class info test","Podam should generate a ClassInfo which contains information for the setters contained in the POJO","SUCCESS","2015-06-20T21:17:17.671+01:00","0.0","0.01"
"Abnormal pojos test","Podam should generate a non null POJO for Abstract types with a concrete type","SUCCESS","2015-06-20T21:17:19.553+01:00","0.0","0.02"
"Annotations test","Podam should handle POJOs with constructors that have one or more self references to the POJO class, provided the required constructor is annotated with @PodamConstructor","SUCCESS","2015-06-20T21:17:14.148+01:00","0.0","0.14"
"Collections test","Podam should handle POJOs with no setters and collections in the constructor","SUCCESS","2015-06-20T21:17:18.034+01:00","0.0","0.02"
"Abnormal pojos test","Podam should handle POJOs with private constructors only","SUCCESS","2015-06-20T21:17:19.615+01:00","0.0","0.03"
"Abnormal pojos test","Podam should handle POJOs with self reference constructors but not default constructors without the need for the @PodamConstructor annotation","SUCCESS","2015-06-20T21:17:19.571+01:00","0.0","0.03"
"Singletons test","Podam should handle Singletons with parameters in the static method","SUCCESS","2015-06-20T21:17:21.698+01:00","0.0","0.04"
"Non EJB pojo test","Podam should handle attributes in accordance with custom Class Info Strategies","SUCCESS","2015-06-20T21:17:20.168+01:00","0.0","0.02"
"Inheritance test","Podam should handle basic inheritance scenarios","SUCCESS","2015-06-20T21:17:20.778+01:00","0.0","0.03"
"Boolean unit test","Podam should handle booleans correctly","SUCCESS","2015-06-20T21:17:16.086+01:00","0.0","0.04"
"Annotations test","Podam should handle both native and wrapped boolean values with @PodamBooleanValue annotation","SUCCESS","2015-06-20T21:17:13.636+01:00","0.0","0.05"
"Annotations test","Podam should handle both native and wrapped byte values with @PodamByteValue annotation","SUCCESS","2015-06-20T21:17:13.690+01:00","0.0","0.06"
"Annotations test","Podam should handle both native and wrapped char values with @PodamCharValue annotation","SUCCESS","2015-06-20T21:17:13.755+01:00","0.0","0.07"
"Annotations test","Podam should handle both native and wrapped double values with @PodamDoubleValue annotation","SUCCESS","2015-06-20T21:17:13.825+01:00","0.0","0.05"
"Annotations test","Podam should handle both native and wrapped float values with @PodamFloatValue annotation","SUCCESS","2015-06-20T21:17:14.087+01:00","0.0","0.06"
"Annotations test","Podam should handle both native and wrapped integer values with @PodamIntValue annotation","SUCCESS","2015-06-20T21:17:13.544+01:00","0.0","0.09"
"Annotations test","Podam should handle both native and wrapped long values with @PodamLongValue annotation","SUCCESS","2015-06-20T21:17:14.291+01:00","0.0","0.05"
"Annotations test","Podam should handle both native and wrapped short values with @PodamShortValue annotation","SUCCESS","2015-06-20T21:17:14.344+01:00","0.0","0.05"
"Constructors unit test","Podam should handle classes with generic Key/Value types","SUCCESS","2015-06-20T21:17:18.641+01:00","0.0","0.02"
"Constructors unit test","Podam should handle constructors with generic arrays during Pojo instantiation","SUCCESS","2015-06-20T21:17:18.709+01:00","0.0","0.02"
"Constructors unit test","Podam should handle constructors with multiple generics during Pojo instantiation","SUCCESS","2015-06-20T21:17:18.748+01:00","0.0","0.02"
"Constructors unit test","Podam should handle generics in setters during Pojo instantiation","SUCCESS","2015-06-20T21:17:18.665+01:00","0.0","0.02"
"Constructors unit test","Podam should handle generics in static constructors during POJO instantiation","SUCCESS","2015-06-20T21:17:18.813+01:00","0.0","0.02"
"Constructors unit test","Podam should handle generics in the constructor","SUCCESS","2015-06-20T21:17:18.597+01:00","0.0","0.02"
"Annotations test","Podam should handle immutable POJOs annotated with @PodamConstructor","SUCCESS","2015-06-20T21:17:14.037+01:00","0.0","0.05"
"Collections test","Podam should handle immutable POJOs with generified collections in the constructor","SUCCESS","2015-06-20T21:17:18.060+01:00","0.0","0.06"
"Collections test","Podam should handle immutable Pojos with non generic collections","SUCCESS","2015-06-20T21:17:18.121+01:00","0.0","0.03"
"Podam factory basic types test","Podam should handle immutable non annotated POJOs","SUCCESS","2015-06-20T21:17:16.794+01:00","0.0","0.04"
"Collections test","Podam should handle standard collections","SUCCESS","2015-06-20T21:17:17.926+01:00","0.0","0.11"
"Inheritance test","Podam should handle the manufacturing of POJOs which inherit from other classes","SUCCESS","2015-06-20T21:17:20.825+01:00","0.0","0.02"
"Class unit test","Podam should handle the manufacturing of POJOs with generic types in constructor","SUCCESS","2015-06-20T21:17:16.408+01:00","0.0","0.03"
"Class unit test","Podam should handle the manufacturing of basic types","SUCCESS","2015-06-20T21:17:16.437+01:00","0.0","0.03"
"Class unit test","Podam should handle the manufacturing of generic POJOs","SUCCESS","2015-06-20T21:17:16.464+01:00","0.0","0.03"
"Inheritance test","Podam should manufacture all POJOs in a tree hierarchy","SUCCESS","2015-06-20T21:17:20.804+01:00","0.0","0.02"
"Constructors unit test","Podam should manufacture package private POJOs","SUCCESS","2015-06-20T21:17:18.421+01:00","0.0","0.03"
"External factory unit test","Podam should not be able to create instances of an Abstract class even if the POJO has a full constructor","SUCCESS","2015-06-20T21:17:20.359+01:00","0.0","0.02"
"External factory unit test","Podam should not be able to create instances of an Abstract class if the external factory does not provide a concrete implementation","SUCCESS","2015-06-20T21:17:20.426+01:00","0.0","0.03"
"External factory unit test","Podam should not create instances of an interface when given an external factory which does not manufacture the concrete type","SUCCESS","2015-06-20T21:17:20.488+01:00","0.0","0.03"
"External factory unit test","Podam should not create instances of non-instantiable classes","SUCCESS","2015-06-20T21:17:20.383+01:00","0.0","0.02"
"Annotations test","Podam should not fill POJO's attributes annotated with @PodamExclude","SUCCESS","2015-06-20T21:17:13.156+01:00","0.0","0.24"
"Abnormal pojos test","Podam should return a null value for non instantiable POJOs","SUCCESS","2015-06-20T21:17:19.535+01:00","0.0","0.02"
"Class info test","Podam should return valid class info for POJOs with no attributes","SUCCESS","2015-06-20T21:17:17.632+01:00","0.0","0.01"
"Abnormal pojos test","Podam should throw an exception if a POJO contains invalid getters or setters","SUCCESS","2015-06-20T21:17:19.599+01:00","0.0","0.01"
"Multiple interfaces inheritance test","Podam will create an instance of a POJO but its interface types won't be instantiated","SUCCESS","2015-06-20T21:17:21.061+01:00","0.0","0.03"
"Random data provider strategy impl initialisation unit test","Test constructor heavy comparator","SUCCESS","2015-06-20T21:17:19.096+01:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Test constructor light comparator","SUCCESS","2015-06-20T21:17:19.097+01:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Test method heavy comparator","SUCCESS","2015-06-20T21:17:19.098+01:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Test method light comparator","SUCCESS","2015-06-20T21:17:19.109+01:00","0.0","0.0"
"Random data provider strategy impl initialisation unit test","Test random provider strategy for long","SUCCESS","2015-06-20T21:17:19.110+01:00","0.0","0.01"
"Annotations test","The @PodamCollection annotation should allow to set sizes on all collections and arrays","SUCCESS","2015-06-20T21:17:14.392+01:00","0.0","0.04"
"Class info test","The ClassInfo object created for a class should handle @PodamExcludeAnnotations","SUCCESS","2015-06-20T21:17:17.643+01:00","0.0","0.01"
"Random data provider strategy impl initialisation unit test","The Random Data Provider Strategy should be initialised correctly and allow for changes in the number of collection elements","SUCCESS","2015-06-20T21:17:19.087+01:00","0.0","0.01"
"External factory unit test","The management of external factories should be correct and chaining should work","SUCCESS","2015-06-20T21:17:20.407+01:00","0.0","0.02"
"Memoization test","When memoization is set to false Podam should return different instances for different invocations","SUCCESS","2015-06-20T21:17:21.328+01:00","0.0","0.02"
"Memoization test","When memoization is set to true Podam should return the same instance for different invocations","SUCCESS","2015-06-20T21:17:21.350+01:00","0.0","0.02"
